# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class OrderLineActivity(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        OrderLineActivity - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'create_date': 'datetime',
            'modify_date': 'datetime',
            'order_no': 'float',
            'lob_id': 'int',
            'sku': 'str',
            'po_no_id': 'int',
            'order_create_date': 'datetime',
            'order_modify_date': 'datetime',
            'cross_dock': 'int',
            'process_no_id': 'int',
            'ordered_qty': 'int',
            'allowed_qty': 'int',
            'shipped_qty': 'int',
            'backorder_qty': 'int',
            'adjust_code': 'int',
            'process_flag': 'str',
            'rev_date': 'str',
            'restriction_rule': 'int',
            'unit_cost': 'float',
            'unit_sell': 'float',
            'unit_discount': 'float',
            'extended_cost': 'float',
            'extended_sell': 'float',
            'extended_discount': 'float',
            'nc_extended_sell': 'float',
            'per': 'str',
            'charge_code': 'str',
            'distribution_code': 'str',
            'upc': 'str',
            'vendor_sku': 'str',
            'order_source_sku': 'str',
            'item_major_group_id': 'int',
            'master_major_group_name': 'str',
            'item_sub_group_id': 'int',
            'master_sub_group_name': 'str',
            'item_product_code_id': 'int',
            'master_production_code_name': 'str',
            'item_account_code_id': 'int',
            'master_account_code_name': 'str',
            'item_summary_code_id': 'int',
            'master_summary_code_name': 'str',
            'item_legacy_low_stock_contact_id': 'int',
            'low_stock_contact_name': 'str',
            'sector': 'str',
            'weight_per_wrap': 'float',
            'item_weight': 'float',
            'production_lot': 'str',
            'number_of_wraps': 'int',
            'number_of_cases': 'int',
            'number_of_touches': 'int',
            'alcohol_type_id': 'int',
            'alcohol_type_name': 'str',
            'alcohol_content': 'float',
            'alcohol_container_id': 'int',
            'alcohol_container_name': 'str',
            'alcohol_container_volume': 'int',
            'alcohol_vintage_year': 'str',
            'alcohol_country_id': 'int',
            'alcohol_country_name': 'str',
            'alcohol_state': 'str',
            'alcohol_region': 'str',
            'alcohol_brand': 'str',
            'alcohol_upc_code': 'str',
            'alcohol_nabca_code': 'str',
            'alcohol_unimerc_code': 'str',
            'alcohol_scc_code': 'str',
            'alternate_usage': 'str',
            'group_order_id': 'float',
            'order_status': 'str',
            'order_status_name': 'str',
            'carrier_id': 'int',
            'carrier_name': 'str',
            'media_code': 'str',
            'legacy_restriction_type': 'str',
            'req_type_name': 'str',
            'service_type_id': 'str',
            'service_type_name': 'str',
            'alcohol_order_type': 'str',
            'distribution_channel': 'str',
            'distribution_channel_name': 'str',
            'priority_code': 'int',
            'order_date': 'datetime',
            'entered_by': 'str',
            'order_reason': 'int',
            'customer_order_no': 'str',
            'price_level': 'str',
            'ship_by': 'datetime',
            'stop_back_orders': 'str',
            'order_source_id': 'int',
            'order_source_name': 'str',
            'integration_partner_id': 'int',
            'integration_partner_name': 'str',
            'order_load_program_id': 'int',
            'order_load_program_name': 'str',
            'oms_order_no': 'int',
            'oms_customer_id': 'int',
            'ship_to_attention': 'str',
            'ship_to_company': 'str',
            'ship_to_street': 'str',
            'ship_to_street2': 'str',
            'ship_to_street3': 'str',
            'ship_to_city': 'str',
            'ship_to_state': 'str',
            'ship_to_zip': 'str',
            'ship_to_country': 'str',
            'ship_to_phone': 'str',
            'ship_to_email': 'str',
            'bill_to_attention': 'str',
            'bill_to_company': 'str',
            'bill_to_street': 'str',
            'bill_to_street2': 'str',
            'bill_to_street3': 'str',
            'bill_to_city': 'str',
            'bill_to_state': 'str',
            'bill_to_zip': 'str',
            'bill_to_country': 'str',
            'bill_to_phone': 'str',
            'bill_to_email': 'str',
            'order_ship_date': 'datetime',
            'freight': 'float',
            'order_weight_lbs': 'float',
            'order_estimated_weight_lbs': 'float',
            'number_of_pallets': 'int',
            'number_of_line_items': 'int',
            'completion_status': 'str',
            'hold_code': 'str',
            'ship_code': 'str',
            'order_message': 'str',
            'division': 'int',
            'cost_center': 'str',
            'authorized_by': 'str',
            'batch_no': 'str',
            'first_ship_date': 'datetime',
            'last_ship_date': 'datetime',
            'deliver_on_date': 'datetime',
            'customer_po_no': 'str',
            'ship_via': 'str',
            'need_by_date': 'datetime',
            'total': 'float',
            'balance_due': 'float',
            'total_paid': 'float',
            'authorization_amount': 'float',
            'subtotal': 'float',
            'tax_on_freight': 'float',
            'tax': 'float',
            'distribution_charges': 'float',
            'shipping_charge': 'float',
            'total_discount': 'float',
            'parcel_account_id': 'int',
            'packing_slip_template_id': 'int',
            'gift_message': 'str',
            'branch_sector': 'str',
            'branch_area': 'str',
            'branch_customer_type': 'str',
            'branch_id': 'str',
            'order_code': 'str',
            'lead_package_id': 'str',
            'total_qty': 'int',
            'estimated_number_of_picks': 'int',
            'order_confirmation_email_template_id': 'int',
            'shipment_confirmation_email_template_id': 'int',
            'order_invoice_template_id': 'int',
            'price_mode': 'str',
            'custom_fields': 'dict(str, object)'
        }

        self.attribute_map = {
            'id': 'id',
            'create_date': 'createDate',
            'modify_date': 'modifyDate',
            'order_no': 'orderNo',
            'lob_id': 'lobId',
            'sku': 'sku',
            'po_no_id': 'poNoId',
            'order_create_date': 'orderCreateDate',
            'order_modify_date': 'orderModifyDate',
            'cross_dock': 'crossDock',
            'process_no_id': 'processNoId',
            'ordered_qty': 'orderedQty',
            'allowed_qty': 'allowedQty',
            'shipped_qty': 'shippedQty',
            'backorder_qty': 'backorderQty',
            'adjust_code': 'adjustCode',
            'process_flag': 'processFlag',
            'rev_date': 'revDate',
            'restriction_rule': 'restrictionRule',
            'unit_cost': 'unitCost',
            'unit_sell': 'unitSell',
            'unit_discount': 'unitDiscount',
            'extended_cost': 'extendedCost',
            'extended_sell': 'extendedSell',
            'extended_discount': 'extendedDiscount',
            'nc_extended_sell': 'ncExtendedSell',
            'per': 'per',
            'charge_code': 'chargeCode',
            'distribution_code': 'distributionCode',
            'upc': 'upc',
            'vendor_sku': 'vendorSKU',
            'order_source_sku': 'orderSourceSKU',
            'item_major_group_id': 'itemMajorGroupId',
            'master_major_group_name': 'masterMajorGroupName',
            'item_sub_group_id': 'itemSubGroupId',
            'master_sub_group_name': 'masterSubGroupName',
            'item_product_code_id': 'itemProductCodeId',
            'master_production_code_name': 'masterProductionCodeName',
            'item_account_code_id': 'itemAccountCodeId',
            'master_account_code_name': 'masterAccountCodeName',
            'item_summary_code_id': 'itemSummaryCodeId',
            'master_summary_code_name': 'masterSummaryCodeName',
            'item_legacy_low_stock_contact_id': 'itemLegacyLowStockContactId',
            'low_stock_contact_name': 'lowStockContactName',
            'sector': 'sector',
            'weight_per_wrap': 'weightPerWrap',
            'item_weight': 'itemWeight',
            'production_lot': 'productionLot',
            'number_of_wraps': 'numberOfWraps',
            'number_of_cases': 'numberOfCases',
            'number_of_touches': 'numberOfTouches',
            'alcohol_type_id': 'alcoholTypeId',
            'alcohol_type_name': 'alcoholTypeName',
            'alcohol_content': 'alcoholContent',
            'alcohol_container_id': 'alcoholContainerId',
            'alcohol_container_name': 'alcoholContainerName',
            'alcohol_container_volume': 'alcoholContainerVolume',
            'alcohol_vintage_year': 'alcoholVintageYear',
            'alcohol_country_id': 'alcoholCountryId',
            'alcohol_country_name': 'alcoholCountryName',
            'alcohol_state': 'alcoholState',
            'alcohol_region': 'alcoholRegion',
            'alcohol_brand': 'alcoholBrand',
            'alcohol_upc_code': 'alcoholUPCCode',
            'alcohol_nabca_code': 'alcoholNABCACode',
            'alcohol_unimerc_code': 'alcoholUNIMERCCode',
            'alcohol_scc_code': 'alcoholSCCCode',
            'alternate_usage': 'alternateUsage',
            'group_order_id': 'groupOrderId',
            'order_status': 'orderStatus',
            'order_status_name': 'orderStatusName',
            'carrier_id': 'carrierId',
            'carrier_name': 'carrierName',
            'media_code': 'mediaCode',
            'legacy_restriction_type': 'legacyRestrictionType',
            'req_type_name': 'reqTypeName',
            'service_type_id': 'serviceTypeId',
            'service_type_name': 'serviceTypeName',
            'alcohol_order_type': 'alcoholOrderType',
            'distribution_channel': 'distributionChannel',
            'distribution_channel_name': 'distributionChannelName',
            'priority_code': 'priorityCode',
            'order_date': 'orderDate',
            'entered_by': 'enteredBy',
            'order_reason': 'orderReason',
            'customer_order_no': 'customerOrderNo',
            'price_level': 'priceLevel',
            'ship_by': 'shipBy',
            'stop_back_orders': 'stopBackOrders',
            'order_source_id': 'orderSourceId',
            'order_source_name': 'orderSourceName',
            'integration_partner_id': 'integrationPartnerId',
            'integration_partner_name': 'integrationPartnerName',
            'order_load_program_id': 'orderLoadProgramId',
            'order_load_program_name': 'orderLoadProgramName',
            'oms_order_no': 'omsOrderNo',
            'oms_customer_id': 'omsCustomerId',
            'ship_to_attention': 'shipToAttention',
            'ship_to_company': 'shipToCompany',
            'ship_to_street': 'shipToStreet',
            'ship_to_street2': 'shipToStreet2',
            'ship_to_street3': 'shipToStreet3',
            'ship_to_city': 'shipToCity',
            'ship_to_state': 'shipToState',
            'ship_to_zip': 'shipToZip',
            'ship_to_country': 'shipToCountry',
            'ship_to_phone': 'shipToPhone',
            'ship_to_email': 'shipToEmail',
            'bill_to_attention': 'billToAttention',
            'bill_to_company': 'billToCompany',
            'bill_to_street': 'billToStreet',
            'bill_to_street2': 'billToStreet2',
            'bill_to_street3': 'billToStreet3',
            'bill_to_city': 'billToCity',
            'bill_to_state': 'billToState',
            'bill_to_zip': 'billToZip',
            'bill_to_country': 'billToCountry',
            'bill_to_phone': 'billToPhone',
            'bill_to_email': 'billToEmail',
            'order_ship_date': 'orderShipDate',
            'freight': 'freight',
            'order_weight_lbs': 'orderWeightLbs',
            'order_estimated_weight_lbs': 'orderEstimatedWeightLbs',
            'number_of_pallets': 'numberOfPallets',
            'number_of_line_items': 'numberOfLineItems',
            'completion_status': 'completionStatus',
            'hold_code': 'holdCode',
            'ship_code': 'shipCode',
            'order_message': 'orderMessage',
            'division': 'division',
            'cost_center': 'costCenter',
            'authorized_by': 'authorizedBy',
            'batch_no': 'batchNo',
            'first_ship_date': 'firstShipDate',
            'last_ship_date': 'lastShipDate',
            'deliver_on_date': 'deliverOnDate',
            'customer_po_no': 'customerPONo',
            'ship_via': 'shipVia',
            'need_by_date': 'needByDate',
            'total': 'total',
            'balance_due': 'balanceDue',
            'total_paid': 'totalPaid',
            'authorization_amount': 'authorizationAmount',
            'subtotal': 'subtotal',
            'tax_on_freight': 'taxOnFreight',
            'tax': 'tax',
            'distribution_charges': 'distributionCharges',
            'shipping_charge': 'shippingCharge',
            'total_discount': 'totalDiscount',
            'parcel_account_id': 'parcelAccountId',
            'packing_slip_template_id': 'packingSlipTemplateId',
            'gift_message': 'giftMessage',
            'branch_sector': 'branchSector',
            'branch_area': 'branchArea',
            'branch_customer_type': 'branchCustomerType',
            'branch_id': 'branchId',
            'order_code': 'orderCode',
            'lead_package_id': 'leadPackageId',
            'total_qty': 'totalQty',
            'estimated_number_of_picks': 'estimatedNumberOfPicks',
            'order_confirmation_email_template_id': 'orderConfirmationEmailTemplateId',
            'shipment_confirmation_email_template_id': 'shipmentConfirmationEmailTemplateId',
            'order_invoice_template_id': 'orderInvoiceTemplateId',
            'price_mode': 'priceMode',
            'custom_fields': 'customFields'
        }

        self._id = None
        self._create_date = None
        self._modify_date = None
        self._order_no = None
        self._lob_id = None
        self._sku = None
        self._po_no_id = None
        self._order_create_date = None
        self._order_modify_date = None
        self._cross_dock = None
        self._process_no_id = None
        self._ordered_qty = None
        self._allowed_qty = None
        self._shipped_qty = None
        self._backorder_qty = None
        self._adjust_code = None
        self._process_flag = None
        self._rev_date = None
        self._restriction_rule = None
        self._unit_cost = None
        self._unit_sell = None
        self._unit_discount = None
        self._extended_cost = None
        self._extended_sell = None
        self._extended_discount = None
        self._nc_extended_sell = None
        self._per = None
        self._charge_code = None
        self._distribution_code = None
        self._upc = None
        self._vendor_sku = None
        self._order_source_sku = None
        self._item_major_group_id = None
        self._master_major_group_name = None
        self._item_sub_group_id = None
        self._master_sub_group_name = None
        self._item_product_code_id = None
        self._master_production_code_name = None
        self._item_account_code_id = None
        self._master_account_code_name = None
        self._item_summary_code_id = None
        self._master_summary_code_name = None
        self._item_legacy_low_stock_contact_id = None
        self._low_stock_contact_name = None
        self._sector = None
        self._weight_per_wrap = None
        self._item_weight = None
        self._production_lot = None
        self._number_of_wraps = None
        self._number_of_cases = None
        self._number_of_touches = None
        self._alcohol_type_id = None
        self._alcohol_type_name = None
        self._alcohol_content = None
        self._alcohol_container_id = None
        self._alcohol_container_name = None
        self._alcohol_container_volume = None
        self._alcohol_vintage_year = None
        self._alcohol_country_id = None
        self._alcohol_country_name = None
        self._alcohol_state = None
        self._alcohol_region = None
        self._alcohol_brand = None
        self._alcohol_upc_code = None
        self._alcohol_nabca_code = None
        self._alcohol_unimerc_code = None
        self._alcohol_scc_code = None
        self._alternate_usage = None
        self._group_order_id = None
        self._order_status = None
        self._order_status_name = None
        self._carrier_id = None
        self._carrier_name = None
        self._media_code = None
        self._legacy_restriction_type = None
        self._req_type_name = None
        self._service_type_id = None
        self._service_type_name = None
        self._alcohol_order_type = None
        self._distribution_channel = None
        self._distribution_channel_name = None
        self._priority_code = None
        self._order_date = None
        self._entered_by = None
        self._order_reason = None
        self._customer_order_no = None
        self._price_level = None
        self._ship_by = None
        self._stop_back_orders = None
        self._order_source_id = None
        self._order_source_name = None
        self._integration_partner_id = None
        self._integration_partner_name = None
        self._order_load_program_id = None
        self._order_load_program_name = None
        self._oms_order_no = None
        self._oms_customer_id = None
        self._ship_to_attention = None
        self._ship_to_company = None
        self._ship_to_street = None
        self._ship_to_street2 = None
        self._ship_to_street3 = None
        self._ship_to_city = None
        self._ship_to_state = None
        self._ship_to_zip = None
        self._ship_to_country = None
        self._ship_to_phone = None
        self._ship_to_email = None
        self._bill_to_attention = None
        self._bill_to_company = None
        self._bill_to_street = None
        self._bill_to_street2 = None
        self._bill_to_street3 = None
        self._bill_to_city = None
        self._bill_to_state = None
        self._bill_to_zip = None
        self._bill_to_country = None
        self._bill_to_phone = None
        self._bill_to_email = None
        self._order_ship_date = None
        self._freight = None
        self._order_weight_lbs = None
        self._order_estimated_weight_lbs = None
        self._number_of_pallets = None
        self._number_of_line_items = None
        self._completion_status = None
        self._hold_code = None
        self._ship_code = None
        self._order_message = None
        self._division = None
        self._cost_center = None
        self._authorized_by = None
        self._batch_no = None
        self._first_ship_date = None
        self._last_ship_date = None
        self._deliver_on_date = None
        self._customer_po_no = None
        self._ship_via = None
        self._need_by_date = None
        self._total = None
        self._balance_due = None
        self._total_paid = None
        self._authorization_amount = None
        self._subtotal = None
        self._tax_on_freight = None
        self._tax = None
        self._distribution_charges = None
        self._shipping_charge = None
        self._total_discount = None
        self._parcel_account_id = None
        self._packing_slip_template_id = None
        self._gift_message = None
        self._branch_sector = None
        self._branch_area = None
        self._branch_customer_type = None
        self._branch_id = None
        self._order_code = None
        self._lead_package_id = None
        self._total_qty = None
        self._estimated_number_of_picks = None
        self._order_confirmation_email_template_id = None
        self._shipment_confirmation_email_template_id = None
        self._order_invoice_template_id = None
        self._price_mode = None
        self._custom_fields = None

    @property
    def id(self):
        """
        Gets the id of this OrderLineActivity.


        :return: The id of this OrderLineActivity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this OrderLineActivity.


        :param id: The id of this OrderLineActivity.
        :type: int
        """
        self._id = id

    @property
    def create_date(self):
        """
        Gets the create_date of this OrderLineActivity.


        :return: The create_date of this OrderLineActivity.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """
        Sets the create_date of this OrderLineActivity.


        :param create_date: The create_date of this OrderLineActivity.
        :type: datetime
        """
        self._create_date = create_date

    @property
    def modify_date(self):
        """
        Gets the modify_date of this OrderLineActivity.


        :return: The modify_date of this OrderLineActivity.
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """
        Sets the modify_date of this OrderLineActivity.


        :param modify_date: The modify_date of this OrderLineActivity.
        :type: datetime
        """
        self._modify_date = modify_date

    @property
    def order_no(self):
        """
        Gets the order_no of this OrderLineActivity.


        :return: The order_no of this OrderLineActivity.
        :rtype: float
        """
        return self._order_no

    @order_no.setter
    def order_no(self, order_no):
        """
        Sets the order_no of this OrderLineActivity.


        :param order_no: The order_no of this OrderLineActivity.
        :type: float
        """
        self._order_no = order_no

    @property
    def lob_id(self):
        """
        Gets the lob_id of this OrderLineActivity.


        :return: The lob_id of this OrderLineActivity.
        :rtype: int
        """
        return self._lob_id

    @lob_id.setter
    def lob_id(self, lob_id):
        """
        Sets the lob_id of this OrderLineActivity.


        :param lob_id: The lob_id of this OrderLineActivity.
        :type: int
        """
        self._lob_id = lob_id

    @property
    def sku(self):
        """
        Gets the sku of this OrderLineActivity.


        :return: The sku of this OrderLineActivity.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """
        Sets the sku of this OrderLineActivity.


        :param sku: The sku of this OrderLineActivity.
        :type: str
        """
        self._sku = sku

    @property
    def po_no_id(self):
        """
        Gets the po_no_id of this OrderLineActivity.


        :return: The po_no_id of this OrderLineActivity.
        :rtype: int
        """
        return self._po_no_id

    @po_no_id.setter
    def po_no_id(self, po_no_id):
        """
        Sets the po_no_id of this OrderLineActivity.


        :param po_no_id: The po_no_id of this OrderLineActivity.
        :type: int
        """
        self._po_no_id = po_no_id

    @property
    def order_create_date(self):
        """
        Gets the order_create_date of this OrderLineActivity.


        :return: The order_create_date of this OrderLineActivity.
        :rtype: datetime
        """
        return self._order_create_date

    @order_create_date.setter
    def order_create_date(self, order_create_date):
        """
        Sets the order_create_date of this OrderLineActivity.


        :param order_create_date: The order_create_date of this OrderLineActivity.
        :type: datetime
        """
        self._order_create_date = order_create_date

    @property
    def order_modify_date(self):
        """
        Gets the order_modify_date of this OrderLineActivity.


        :return: The order_modify_date of this OrderLineActivity.
        :rtype: datetime
        """
        return self._order_modify_date

    @order_modify_date.setter
    def order_modify_date(self, order_modify_date):
        """
        Sets the order_modify_date of this OrderLineActivity.


        :param order_modify_date: The order_modify_date of this OrderLineActivity.
        :type: datetime
        """
        self._order_modify_date = order_modify_date

    @property
    def cross_dock(self):
        """
        Gets the cross_dock of this OrderLineActivity.


        :return: The cross_dock of this OrderLineActivity.
        :rtype: int
        """
        return self._cross_dock

    @cross_dock.setter
    def cross_dock(self, cross_dock):
        """
        Sets the cross_dock of this OrderLineActivity.


        :param cross_dock: The cross_dock of this OrderLineActivity.
        :type: int
        """
        self._cross_dock = cross_dock

    @property
    def process_no_id(self):
        """
        Gets the process_no_id of this OrderLineActivity.


        :return: The process_no_id of this OrderLineActivity.
        :rtype: int
        """
        return self._process_no_id

    @process_no_id.setter
    def process_no_id(self, process_no_id):
        """
        Sets the process_no_id of this OrderLineActivity.


        :param process_no_id: The process_no_id of this OrderLineActivity.
        :type: int
        """
        self._process_no_id = process_no_id

    @property
    def ordered_qty(self):
        """
        Gets the ordered_qty of this OrderLineActivity.


        :return: The ordered_qty of this OrderLineActivity.
        :rtype: int
        """
        return self._ordered_qty

    @ordered_qty.setter
    def ordered_qty(self, ordered_qty):
        """
        Sets the ordered_qty of this OrderLineActivity.


        :param ordered_qty: The ordered_qty of this OrderLineActivity.
        :type: int
        """
        self._ordered_qty = ordered_qty

    @property
    def allowed_qty(self):
        """
        Gets the allowed_qty of this OrderLineActivity.


        :return: The allowed_qty of this OrderLineActivity.
        :rtype: int
        """
        return self._allowed_qty

    @allowed_qty.setter
    def allowed_qty(self, allowed_qty):
        """
        Sets the allowed_qty of this OrderLineActivity.


        :param allowed_qty: The allowed_qty of this OrderLineActivity.
        :type: int
        """
        self._allowed_qty = allowed_qty

    @property
    def shipped_qty(self):
        """
        Gets the shipped_qty of this OrderLineActivity.


        :return: The shipped_qty of this OrderLineActivity.
        :rtype: int
        """
        return self._shipped_qty

    @shipped_qty.setter
    def shipped_qty(self, shipped_qty):
        """
        Sets the shipped_qty of this OrderLineActivity.


        :param shipped_qty: The shipped_qty of this OrderLineActivity.
        :type: int
        """
        self._shipped_qty = shipped_qty

    @property
    def backorder_qty(self):
        """
        Gets the backorder_qty of this OrderLineActivity.


        :return: The backorder_qty of this OrderLineActivity.
        :rtype: int
        """
        return self._backorder_qty

    @backorder_qty.setter
    def backorder_qty(self, backorder_qty):
        """
        Sets the backorder_qty of this OrderLineActivity.


        :param backorder_qty: The backorder_qty of this OrderLineActivity.
        :type: int
        """
        self._backorder_qty = backorder_qty

    @property
    def adjust_code(self):
        """
        Gets the adjust_code of this OrderLineActivity.


        :return: The adjust_code of this OrderLineActivity.
        :rtype: int
        """
        return self._adjust_code

    @adjust_code.setter
    def adjust_code(self, adjust_code):
        """
        Sets the adjust_code of this OrderLineActivity.


        :param adjust_code: The adjust_code of this OrderLineActivity.
        :type: int
        """
        self._adjust_code = adjust_code

    @property
    def process_flag(self):
        """
        Gets the process_flag of this OrderLineActivity.


        :return: The process_flag of this OrderLineActivity.
        :rtype: str
        """
        return self._process_flag

    @process_flag.setter
    def process_flag(self, process_flag):
        """
        Sets the process_flag of this OrderLineActivity.


        :param process_flag: The process_flag of this OrderLineActivity.
        :type: str
        """
        self._process_flag = process_flag

    @property
    def rev_date(self):
        """
        Gets the rev_date of this OrderLineActivity.


        :return: The rev_date of this OrderLineActivity.
        :rtype: str
        """
        return self._rev_date

    @rev_date.setter
    def rev_date(self, rev_date):
        """
        Sets the rev_date of this OrderLineActivity.


        :param rev_date: The rev_date of this OrderLineActivity.
        :type: str
        """
        self._rev_date = rev_date

    @property
    def restriction_rule(self):
        """
        Gets the restriction_rule of this OrderLineActivity.


        :return: The restriction_rule of this OrderLineActivity.
        :rtype: int
        """
        return self._restriction_rule

    @restriction_rule.setter
    def restriction_rule(self, restriction_rule):
        """
        Sets the restriction_rule of this OrderLineActivity.


        :param restriction_rule: The restriction_rule of this OrderLineActivity.
        :type: int
        """
        self._restriction_rule = restriction_rule

    @property
    def unit_cost(self):
        """
        Gets the unit_cost of this OrderLineActivity.


        :return: The unit_cost of this OrderLineActivity.
        :rtype: float
        """
        return self._unit_cost

    @unit_cost.setter
    def unit_cost(self, unit_cost):
        """
        Sets the unit_cost of this OrderLineActivity.


        :param unit_cost: The unit_cost of this OrderLineActivity.
        :type: float
        """
        self._unit_cost = unit_cost

    @property
    def unit_sell(self):
        """
        Gets the unit_sell of this OrderLineActivity.


        :return: The unit_sell of this OrderLineActivity.
        :rtype: float
        """
        return self._unit_sell

    @unit_sell.setter
    def unit_sell(self, unit_sell):
        """
        Sets the unit_sell of this OrderLineActivity.


        :param unit_sell: The unit_sell of this OrderLineActivity.
        :type: float
        """
        self._unit_sell = unit_sell

    @property
    def unit_discount(self):
        """
        Gets the unit_discount of this OrderLineActivity.


        :return: The unit_discount of this OrderLineActivity.
        :rtype: float
        """
        return self._unit_discount

    @unit_discount.setter
    def unit_discount(self, unit_discount):
        """
        Sets the unit_discount of this OrderLineActivity.


        :param unit_discount: The unit_discount of this OrderLineActivity.
        :type: float
        """
        self._unit_discount = unit_discount

    @property
    def extended_cost(self):
        """
        Gets the extended_cost of this OrderLineActivity.


        :return: The extended_cost of this OrderLineActivity.
        :rtype: float
        """
        return self._extended_cost

    @extended_cost.setter
    def extended_cost(self, extended_cost):
        """
        Sets the extended_cost of this OrderLineActivity.


        :param extended_cost: The extended_cost of this OrderLineActivity.
        :type: float
        """
        self._extended_cost = extended_cost

    @property
    def extended_sell(self):
        """
        Gets the extended_sell of this OrderLineActivity.


        :return: The extended_sell of this OrderLineActivity.
        :rtype: float
        """
        return self._extended_sell

    @extended_sell.setter
    def extended_sell(self, extended_sell):
        """
        Sets the extended_sell of this OrderLineActivity.


        :param extended_sell: The extended_sell of this OrderLineActivity.
        :type: float
        """
        self._extended_sell = extended_sell

    @property
    def extended_discount(self):
        """
        Gets the extended_discount of this OrderLineActivity.


        :return: The extended_discount of this OrderLineActivity.
        :rtype: float
        """
        return self._extended_discount

    @extended_discount.setter
    def extended_discount(self, extended_discount):
        """
        Sets the extended_discount of this OrderLineActivity.


        :param extended_discount: The extended_discount of this OrderLineActivity.
        :type: float
        """
        self._extended_discount = extended_discount

    @property
    def nc_extended_sell(self):
        """
        Gets the nc_extended_sell of this OrderLineActivity.


        :return: The nc_extended_sell of this OrderLineActivity.
        :rtype: float
        """
        return self._nc_extended_sell

    @nc_extended_sell.setter
    def nc_extended_sell(self, nc_extended_sell):
        """
        Sets the nc_extended_sell of this OrderLineActivity.


        :param nc_extended_sell: The nc_extended_sell of this OrderLineActivity.
        :type: float
        """
        self._nc_extended_sell = nc_extended_sell

    @property
    def per(self):
        """
        Gets the per of this OrderLineActivity.


        :return: The per of this OrderLineActivity.
        :rtype: str
        """
        return self._per

    @per.setter
    def per(self, per):
        """
        Sets the per of this OrderLineActivity.


        :param per: The per of this OrderLineActivity.
        :type: str
        """
        self._per = per

    @property
    def charge_code(self):
        """
        Gets the charge_code of this OrderLineActivity.


        :return: The charge_code of this OrderLineActivity.
        :rtype: str
        """
        return self._charge_code

    @charge_code.setter
    def charge_code(self, charge_code):
        """
        Sets the charge_code of this OrderLineActivity.


        :param charge_code: The charge_code of this OrderLineActivity.
        :type: str
        """
        self._charge_code = charge_code

    @property
    def distribution_code(self):
        """
        Gets the distribution_code of this OrderLineActivity.


        :return: The distribution_code of this OrderLineActivity.
        :rtype: str
        """
        return self._distribution_code

    @distribution_code.setter
    def distribution_code(self, distribution_code):
        """
        Sets the distribution_code of this OrderLineActivity.


        :param distribution_code: The distribution_code of this OrderLineActivity.
        :type: str
        """
        self._distribution_code = distribution_code

    @property
    def upc(self):
        """
        Gets the upc of this OrderLineActivity.


        :return: The upc of this OrderLineActivity.
        :rtype: str
        """
        return self._upc

    @upc.setter
    def upc(self, upc):
        """
        Sets the upc of this OrderLineActivity.


        :param upc: The upc of this OrderLineActivity.
        :type: str
        """
        self._upc = upc

    @property
    def vendor_sku(self):
        """
        Gets the vendor_sku of this OrderLineActivity.


        :return: The vendor_sku of this OrderLineActivity.
        :rtype: str
        """
        return self._vendor_sku

    @vendor_sku.setter
    def vendor_sku(self, vendor_sku):
        """
        Sets the vendor_sku of this OrderLineActivity.


        :param vendor_sku: The vendor_sku of this OrderLineActivity.
        :type: str
        """
        self._vendor_sku = vendor_sku

    @property
    def order_source_sku(self):
        """
        Gets the order_source_sku of this OrderLineActivity.


        :return: The order_source_sku of this OrderLineActivity.
        :rtype: str
        """
        return self._order_source_sku

    @order_source_sku.setter
    def order_source_sku(self, order_source_sku):
        """
        Sets the order_source_sku of this OrderLineActivity.


        :param order_source_sku: The order_source_sku of this OrderLineActivity.
        :type: str
        """
        self._order_source_sku = order_source_sku

    @property
    def item_major_group_id(self):
        """
        Gets the item_major_group_id of this OrderLineActivity.


        :return: The item_major_group_id of this OrderLineActivity.
        :rtype: int
        """
        return self._item_major_group_id

    @item_major_group_id.setter
    def item_major_group_id(self, item_major_group_id):
        """
        Sets the item_major_group_id of this OrderLineActivity.


        :param item_major_group_id: The item_major_group_id of this OrderLineActivity.
        :type: int
        """
        self._item_major_group_id = item_major_group_id

    @property
    def master_major_group_name(self):
        """
        Gets the master_major_group_name of this OrderLineActivity.


        :return: The master_major_group_name of this OrderLineActivity.
        :rtype: str
        """
        return self._master_major_group_name

    @master_major_group_name.setter
    def master_major_group_name(self, master_major_group_name):
        """
        Sets the master_major_group_name of this OrderLineActivity.


        :param master_major_group_name: The master_major_group_name of this OrderLineActivity.
        :type: str
        """
        self._master_major_group_name = master_major_group_name

    @property
    def item_sub_group_id(self):
        """
        Gets the item_sub_group_id of this OrderLineActivity.


        :return: The item_sub_group_id of this OrderLineActivity.
        :rtype: int
        """
        return self._item_sub_group_id

    @item_sub_group_id.setter
    def item_sub_group_id(self, item_sub_group_id):
        """
        Sets the item_sub_group_id of this OrderLineActivity.


        :param item_sub_group_id: The item_sub_group_id of this OrderLineActivity.
        :type: int
        """
        self._item_sub_group_id = item_sub_group_id

    @property
    def master_sub_group_name(self):
        """
        Gets the master_sub_group_name of this OrderLineActivity.


        :return: The master_sub_group_name of this OrderLineActivity.
        :rtype: str
        """
        return self._master_sub_group_name

    @master_sub_group_name.setter
    def master_sub_group_name(self, master_sub_group_name):
        """
        Sets the master_sub_group_name of this OrderLineActivity.


        :param master_sub_group_name: The master_sub_group_name of this OrderLineActivity.
        :type: str
        """
        self._master_sub_group_name = master_sub_group_name

    @property
    def item_product_code_id(self):
        """
        Gets the item_product_code_id of this OrderLineActivity.


        :return: The item_product_code_id of this OrderLineActivity.
        :rtype: int
        """
        return self._item_product_code_id

    @item_product_code_id.setter
    def item_product_code_id(self, item_product_code_id):
        """
        Sets the item_product_code_id of this OrderLineActivity.


        :param item_product_code_id: The item_product_code_id of this OrderLineActivity.
        :type: int
        """
        self._item_product_code_id = item_product_code_id

    @property
    def master_production_code_name(self):
        """
        Gets the master_production_code_name of this OrderLineActivity.


        :return: The master_production_code_name of this OrderLineActivity.
        :rtype: str
        """
        return self._master_production_code_name

    @master_production_code_name.setter
    def master_production_code_name(self, master_production_code_name):
        """
        Sets the master_production_code_name of this OrderLineActivity.


        :param master_production_code_name: The master_production_code_name of this OrderLineActivity.
        :type: str
        """
        self._master_production_code_name = master_production_code_name

    @property
    def item_account_code_id(self):
        """
        Gets the item_account_code_id of this OrderLineActivity.


        :return: The item_account_code_id of this OrderLineActivity.
        :rtype: int
        """
        return self._item_account_code_id

    @item_account_code_id.setter
    def item_account_code_id(self, item_account_code_id):
        """
        Sets the item_account_code_id of this OrderLineActivity.


        :param item_account_code_id: The item_account_code_id of this OrderLineActivity.
        :type: int
        """
        self._item_account_code_id = item_account_code_id

    @property
    def master_account_code_name(self):
        """
        Gets the master_account_code_name of this OrderLineActivity.


        :return: The master_account_code_name of this OrderLineActivity.
        :rtype: str
        """
        return self._master_account_code_name

    @master_account_code_name.setter
    def master_account_code_name(self, master_account_code_name):
        """
        Sets the master_account_code_name of this OrderLineActivity.


        :param master_account_code_name: The master_account_code_name of this OrderLineActivity.
        :type: str
        """
        self._master_account_code_name = master_account_code_name

    @property
    def item_summary_code_id(self):
        """
        Gets the item_summary_code_id of this OrderLineActivity.


        :return: The item_summary_code_id of this OrderLineActivity.
        :rtype: int
        """
        return self._item_summary_code_id

    @item_summary_code_id.setter
    def item_summary_code_id(self, item_summary_code_id):
        """
        Sets the item_summary_code_id of this OrderLineActivity.


        :param item_summary_code_id: The item_summary_code_id of this OrderLineActivity.
        :type: int
        """
        self._item_summary_code_id = item_summary_code_id

    @property
    def master_summary_code_name(self):
        """
        Gets the master_summary_code_name of this OrderLineActivity.


        :return: The master_summary_code_name of this OrderLineActivity.
        :rtype: str
        """
        return self._master_summary_code_name

    @master_summary_code_name.setter
    def master_summary_code_name(self, master_summary_code_name):
        """
        Sets the master_summary_code_name of this OrderLineActivity.


        :param master_summary_code_name: The master_summary_code_name of this OrderLineActivity.
        :type: str
        """
        self._master_summary_code_name = master_summary_code_name

    @property
    def item_legacy_low_stock_contact_id(self):
        """
        Gets the item_legacy_low_stock_contact_id of this OrderLineActivity.


        :return: The item_legacy_low_stock_contact_id of this OrderLineActivity.
        :rtype: int
        """
        return self._item_legacy_low_stock_contact_id

    @item_legacy_low_stock_contact_id.setter
    def item_legacy_low_stock_contact_id(self, item_legacy_low_stock_contact_id):
        """
        Sets the item_legacy_low_stock_contact_id of this OrderLineActivity.


        :param item_legacy_low_stock_contact_id: The item_legacy_low_stock_contact_id of this OrderLineActivity.
        :type: int
        """
        self._item_legacy_low_stock_contact_id = item_legacy_low_stock_contact_id

    @property
    def low_stock_contact_name(self):
        """
        Gets the low_stock_contact_name of this OrderLineActivity.


        :return: The low_stock_contact_name of this OrderLineActivity.
        :rtype: str
        """
        return self._low_stock_contact_name

    @low_stock_contact_name.setter
    def low_stock_contact_name(self, low_stock_contact_name):
        """
        Sets the low_stock_contact_name of this OrderLineActivity.


        :param low_stock_contact_name: The low_stock_contact_name of this OrderLineActivity.
        :type: str
        """
        self._low_stock_contact_name = low_stock_contact_name

    @property
    def sector(self):
        """
        Gets the sector of this OrderLineActivity.


        :return: The sector of this OrderLineActivity.
        :rtype: str
        """
        return self._sector

    @sector.setter
    def sector(self, sector):
        """
        Sets the sector of this OrderLineActivity.


        :param sector: The sector of this OrderLineActivity.
        :type: str
        """
        self._sector = sector

    @property
    def weight_per_wrap(self):
        """
        Gets the weight_per_wrap of this OrderLineActivity.


        :return: The weight_per_wrap of this OrderLineActivity.
        :rtype: float
        """
        return self._weight_per_wrap

    @weight_per_wrap.setter
    def weight_per_wrap(self, weight_per_wrap):
        """
        Sets the weight_per_wrap of this OrderLineActivity.


        :param weight_per_wrap: The weight_per_wrap of this OrderLineActivity.
        :type: float
        """
        self._weight_per_wrap = weight_per_wrap

    @property
    def item_weight(self):
        """
        Gets the item_weight of this OrderLineActivity.


        :return: The item_weight of this OrderLineActivity.
        :rtype: float
        """
        return self._item_weight

    @item_weight.setter
    def item_weight(self, item_weight):
        """
        Sets the item_weight of this OrderLineActivity.


        :param item_weight: The item_weight of this OrderLineActivity.
        :type: float
        """
        self._item_weight = item_weight

    @property
    def production_lot(self):
        """
        Gets the production_lot of this OrderLineActivity.


        :return: The production_lot of this OrderLineActivity.
        :rtype: str
        """
        return self._production_lot

    @production_lot.setter
    def production_lot(self, production_lot):
        """
        Sets the production_lot of this OrderLineActivity.


        :param production_lot: The production_lot of this OrderLineActivity.
        :type: str
        """
        self._production_lot = production_lot

    @property
    def number_of_wraps(self):
        """
        Gets the number_of_wraps of this OrderLineActivity.


        :return: The number_of_wraps of this OrderLineActivity.
        :rtype: int
        """
        return self._number_of_wraps

    @number_of_wraps.setter
    def number_of_wraps(self, number_of_wraps):
        """
        Sets the number_of_wraps of this OrderLineActivity.


        :param number_of_wraps: The number_of_wraps of this OrderLineActivity.
        :type: int
        """
        self._number_of_wraps = number_of_wraps

    @property
    def number_of_cases(self):
        """
        Gets the number_of_cases of this OrderLineActivity.


        :return: The number_of_cases of this OrderLineActivity.
        :rtype: int
        """
        return self._number_of_cases

    @number_of_cases.setter
    def number_of_cases(self, number_of_cases):
        """
        Sets the number_of_cases of this OrderLineActivity.


        :param number_of_cases: The number_of_cases of this OrderLineActivity.
        :type: int
        """
        self._number_of_cases = number_of_cases

    @property
    def number_of_touches(self):
        """
        Gets the number_of_touches of this OrderLineActivity.


        :return: The number_of_touches of this OrderLineActivity.
        :rtype: int
        """
        return self._number_of_touches

    @number_of_touches.setter
    def number_of_touches(self, number_of_touches):
        """
        Sets the number_of_touches of this OrderLineActivity.


        :param number_of_touches: The number_of_touches of this OrderLineActivity.
        :type: int
        """
        self._number_of_touches = number_of_touches

    @property
    def alcohol_type_id(self):
        """
        Gets the alcohol_type_id of this OrderLineActivity.


        :return: The alcohol_type_id of this OrderLineActivity.
        :rtype: int
        """
        return self._alcohol_type_id

    @alcohol_type_id.setter
    def alcohol_type_id(self, alcohol_type_id):
        """
        Sets the alcohol_type_id of this OrderLineActivity.


        :param alcohol_type_id: The alcohol_type_id of this OrderLineActivity.
        :type: int
        """
        self._alcohol_type_id = alcohol_type_id

    @property
    def alcohol_type_name(self):
        """
        Gets the alcohol_type_name of this OrderLineActivity.


        :return: The alcohol_type_name of this OrderLineActivity.
        :rtype: str
        """
        return self._alcohol_type_name

    @alcohol_type_name.setter
    def alcohol_type_name(self, alcohol_type_name):
        """
        Sets the alcohol_type_name of this OrderLineActivity.


        :param alcohol_type_name: The alcohol_type_name of this OrderLineActivity.
        :type: str
        """
        self._alcohol_type_name = alcohol_type_name

    @property
    def alcohol_content(self):
        """
        Gets the alcohol_content of this OrderLineActivity.


        :return: The alcohol_content of this OrderLineActivity.
        :rtype: float
        """
        return self._alcohol_content

    @alcohol_content.setter
    def alcohol_content(self, alcohol_content):
        """
        Sets the alcohol_content of this OrderLineActivity.


        :param alcohol_content: The alcohol_content of this OrderLineActivity.
        :type: float
        """
        self._alcohol_content = alcohol_content

    @property
    def alcohol_container_id(self):
        """
        Gets the alcohol_container_id of this OrderLineActivity.


        :return: The alcohol_container_id of this OrderLineActivity.
        :rtype: int
        """
        return self._alcohol_container_id

    @alcohol_container_id.setter
    def alcohol_container_id(self, alcohol_container_id):
        """
        Sets the alcohol_container_id of this OrderLineActivity.


        :param alcohol_container_id: The alcohol_container_id of this OrderLineActivity.
        :type: int
        """
        self._alcohol_container_id = alcohol_container_id

    @property
    def alcohol_container_name(self):
        """
        Gets the alcohol_container_name of this OrderLineActivity.


        :return: The alcohol_container_name of this OrderLineActivity.
        :rtype: str
        """
        return self._alcohol_container_name

    @alcohol_container_name.setter
    def alcohol_container_name(self, alcohol_container_name):
        """
        Sets the alcohol_container_name of this OrderLineActivity.


        :param alcohol_container_name: The alcohol_container_name of this OrderLineActivity.
        :type: str
        """
        self._alcohol_container_name = alcohol_container_name

    @property
    def alcohol_container_volume(self):
        """
        Gets the alcohol_container_volume of this OrderLineActivity.


        :return: The alcohol_container_volume of this OrderLineActivity.
        :rtype: int
        """
        return self._alcohol_container_volume

    @alcohol_container_volume.setter
    def alcohol_container_volume(self, alcohol_container_volume):
        """
        Sets the alcohol_container_volume of this OrderLineActivity.


        :param alcohol_container_volume: The alcohol_container_volume of this OrderLineActivity.
        :type: int
        """
        self._alcohol_container_volume = alcohol_container_volume

    @property
    def alcohol_vintage_year(self):
        """
        Gets the alcohol_vintage_year of this OrderLineActivity.


        :return: The alcohol_vintage_year of this OrderLineActivity.
        :rtype: str
        """
        return self._alcohol_vintage_year

    @alcohol_vintage_year.setter
    def alcohol_vintage_year(self, alcohol_vintage_year):
        """
        Sets the alcohol_vintage_year of this OrderLineActivity.


        :param alcohol_vintage_year: The alcohol_vintage_year of this OrderLineActivity.
        :type: str
        """
        self._alcohol_vintage_year = alcohol_vintage_year

    @property
    def alcohol_country_id(self):
        """
        Gets the alcohol_country_id of this OrderLineActivity.


        :return: The alcohol_country_id of this OrderLineActivity.
        :rtype: int
        """
        return self._alcohol_country_id

    @alcohol_country_id.setter
    def alcohol_country_id(self, alcohol_country_id):
        """
        Sets the alcohol_country_id of this OrderLineActivity.


        :param alcohol_country_id: The alcohol_country_id of this OrderLineActivity.
        :type: int
        """
        self._alcohol_country_id = alcohol_country_id

    @property
    def alcohol_country_name(self):
        """
        Gets the alcohol_country_name of this OrderLineActivity.


        :return: The alcohol_country_name of this OrderLineActivity.
        :rtype: str
        """
        return self._alcohol_country_name

    @alcohol_country_name.setter
    def alcohol_country_name(self, alcohol_country_name):
        """
        Sets the alcohol_country_name of this OrderLineActivity.


        :param alcohol_country_name: The alcohol_country_name of this OrderLineActivity.
        :type: str
        """
        self._alcohol_country_name = alcohol_country_name

    @property
    def alcohol_state(self):
        """
        Gets the alcohol_state of this OrderLineActivity.


        :return: The alcohol_state of this OrderLineActivity.
        :rtype: str
        """
        return self._alcohol_state

    @alcohol_state.setter
    def alcohol_state(self, alcohol_state):
        """
        Sets the alcohol_state of this OrderLineActivity.


        :param alcohol_state: The alcohol_state of this OrderLineActivity.
        :type: str
        """
        self._alcohol_state = alcohol_state

    @property
    def alcohol_region(self):
        """
        Gets the alcohol_region of this OrderLineActivity.


        :return: The alcohol_region of this OrderLineActivity.
        :rtype: str
        """
        return self._alcohol_region

    @alcohol_region.setter
    def alcohol_region(self, alcohol_region):
        """
        Sets the alcohol_region of this OrderLineActivity.


        :param alcohol_region: The alcohol_region of this OrderLineActivity.
        :type: str
        """
        self._alcohol_region = alcohol_region

    @property
    def alcohol_brand(self):
        """
        Gets the alcohol_brand of this OrderLineActivity.


        :return: The alcohol_brand of this OrderLineActivity.
        :rtype: str
        """
        return self._alcohol_brand

    @alcohol_brand.setter
    def alcohol_brand(self, alcohol_brand):
        """
        Sets the alcohol_brand of this OrderLineActivity.


        :param alcohol_brand: The alcohol_brand of this OrderLineActivity.
        :type: str
        """
        self._alcohol_brand = alcohol_brand

    @property
    def alcohol_upc_code(self):
        """
        Gets the alcohol_upc_code of this OrderLineActivity.


        :return: The alcohol_upc_code of this OrderLineActivity.
        :rtype: str
        """
        return self._alcohol_upc_code

    @alcohol_upc_code.setter
    def alcohol_upc_code(self, alcohol_upc_code):
        """
        Sets the alcohol_upc_code of this OrderLineActivity.


        :param alcohol_upc_code: The alcohol_upc_code of this OrderLineActivity.
        :type: str
        """
        self._alcohol_upc_code = alcohol_upc_code

    @property
    def alcohol_nabca_code(self):
        """
        Gets the alcohol_nabca_code of this OrderLineActivity.


        :return: The alcohol_nabca_code of this OrderLineActivity.
        :rtype: str
        """
        return self._alcohol_nabca_code

    @alcohol_nabca_code.setter
    def alcohol_nabca_code(self, alcohol_nabca_code):
        """
        Sets the alcohol_nabca_code of this OrderLineActivity.


        :param alcohol_nabca_code: The alcohol_nabca_code of this OrderLineActivity.
        :type: str
        """
        self._alcohol_nabca_code = alcohol_nabca_code

    @property
    def alcohol_unimerc_code(self):
        """
        Gets the alcohol_unimerc_code of this OrderLineActivity.


        :return: The alcohol_unimerc_code of this OrderLineActivity.
        :rtype: str
        """
        return self._alcohol_unimerc_code

    @alcohol_unimerc_code.setter
    def alcohol_unimerc_code(self, alcohol_unimerc_code):
        """
        Sets the alcohol_unimerc_code of this OrderLineActivity.


        :param alcohol_unimerc_code: The alcohol_unimerc_code of this OrderLineActivity.
        :type: str
        """
        self._alcohol_unimerc_code = alcohol_unimerc_code

    @property
    def alcohol_scc_code(self):
        """
        Gets the alcohol_scc_code of this OrderLineActivity.


        :return: The alcohol_scc_code of this OrderLineActivity.
        :rtype: str
        """
        return self._alcohol_scc_code

    @alcohol_scc_code.setter
    def alcohol_scc_code(self, alcohol_scc_code):
        """
        Sets the alcohol_scc_code of this OrderLineActivity.


        :param alcohol_scc_code: The alcohol_scc_code of this OrderLineActivity.
        :type: str
        """
        self._alcohol_scc_code = alcohol_scc_code

    @property
    def alternate_usage(self):
        """
        Gets the alternate_usage of this OrderLineActivity.


        :return: The alternate_usage of this OrderLineActivity.
        :rtype: str
        """
        return self._alternate_usage

    @alternate_usage.setter
    def alternate_usage(self, alternate_usage):
        """
        Sets the alternate_usage of this OrderLineActivity.


        :param alternate_usage: The alternate_usage of this OrderLineActivity.
        :type: str
        """
        self._alternate_usage = alternate_usage

    @property
    def group_order_id(self):
        """
        Gets the group_order_id of this OrderLineActivity.


        :return: The group_order_id of this OrderLineActivity.
        :rtype: float
        """
        return self._group_order_id

    @group_order_id.setter
    def group_order_id(self, group_order_id):
        """
        Sets the group_order_id of this OrderLineActivity.


        :param group_order_id: The group_order_id of this OrderLineActivity.
        :type: float
        """
        self._group_order_id = group_order_id

    @property
    def order_status(self):
        """
        Gets the order_status of this OrderLineActivity.


        :return: The order_status of this OrderLineActivity.
        :rtype: str
        """
        return self._order_status

    @order_status.setter
    def order_status(self, order_status):
        """
        Sets the order_status of this OrderLineActivity.


        :param order_status: The order_status of this OrderLineActivity.
        :type: str
        """
        self._order_status = order_status

    @property
    def order_status_name(self):
        """
        Gets the order_status_name of this OrderLineActivity.


        :return: The order_status_name of this OrderLineActivity.
        :rtype: str
        """
        return self._order_status_name

    @order_status_name.setter
    def order_status_name(self, order_status_name):
        """
        Sets the order_status_name of this OrderLineActivity.


        :param order_status_name: The order_status_name of this OrderLineActivity.
        :type: str
        """
        self._order_status_name = order_status_name

    @property
    def carrier_id(self):
        """
        Gets the carrier_id of this OrderLineActivity.


        :return: The carrier_id of this OrderLineActivity.
        :rtype: int
        """
        return self._carrier_id

    @carrier_id.setter
    def carrier_id(self, carrier_id):
        """
        Sets the carrier_id of this OrderLineActivity.


        :param carrier_id: The carrier_id of this OrderLineActivity.
        :type: int
        """
        self._carrier_id = carrier_id

    @property
    def carrier_name(self):
        """
        Gets the carrier_name of this OrderLineActivity.


        :return: The carrier_name of this OrderLineActivity.
        :rtype: str
        """
        return self._carrier_name

    @carrier_name.setter
    def carrier_name(self, carrier_name):
        """
        Sets the carrier_name of this OrderLineActivity.


        :param carrier_name: The carrier_name of this OrderLineActivity.
        :type: str
        """
        self._carrier_name = carrier_name

    @property
    def media_code(self):
        """
        Gets the media_code of this OrderLineActivity.


        :return: The media_code of this OrderLineActivity.
        :rtype: str
        """
        return self._media_code

    @media_code.setter
    def media_code(self, media_code):
        """
        Sets the media_code of this OrderLineActivity.


        :param media_code: The media_code of this OrderLineActivity.
        :type: str
        """
        self._media_code = media_code

    @property
    def legacy_restriction_type(self):
        """
        Gets the legacy_restriction_type of this OrderLineActivity.


        :return: The legacy_restriction_type of this OrderLineActivity.
        :rtype: str
        """
        return self._legacy_restriction_type

    @legacy_restriction_type.setter
    def legacy_restriction_type(self, legacy_restriction_type):
        """
        Sets the legacy_restriction_type of this OrderLineActivity.


        :param legacy_restriction_type: The legacy_restriction_type of this OrderLineActivity.
        :type: str
        """
        self._legacy_restriction_type = legacy_restriction_type

    @property
    def req_type_name(self):
        """
        Gets the req_type_name of this OrderLineActivity.


        :return: The req_type_name of this OrderLineActivity.
        :rtype: str
        """
        return self._req_type_name

    @req_type_name.setter
    def req_type_name(self, req_type_name):
        """
        Sets the req_type_name of this OrderLineActivity.


        :param req_type_name: The req_type_name of this OrderLineActivity.
        :type: str
        """
        self._req_type_name = req_type_name

    @property
    def service_type_id(self):
        """
        Gets the service_type_id of this OrderLineActivity.


        :return: The service_type_id of this OrderLineActivity.
        :rtype: str
        """
        return self._service_type_id

    @service_type_id.setter
    def service_type_id(self, service_type_id):
        """
        Sets the service_type_id of this OrderLineActivity.


        :param service_type_id: The service_type_id of this OrderLineActivity.
        :type: str
        """
        self._service_type_id = service_type_id

    @property
    def service_type_name(self):
        """
        Gets the service_type_name of this OrderLineActivity.


        :return: The service_type_name of this OrderLineActivity.
        :rtype: str
        """
        return self._service_type_name

    @service_type_name.setter
    def service_type_name(self, service_type_name):
        """
        Sets the service_type_name of this OrderLineActivity.


        :param service_type_name: The service_type_name of this OrderLineActivity.
        :type: str
        """
        self._service_type_name = service_type_name

    @property
    def alcohol_order_type(self):
        """
        Gets the alcohol_order_type of this OrderLineActivity.


        :return: The alcohol_order_type of this OrderLineActivity.
        :rtype: str
        """
        return self._alcohol_order_type

    @alcohol_order_type.setter
    def alcohol_order_type(self, alcohol_order_type):
        """
        Sets the alcohol_order_type of this OrderLineActivity.


        :param alcohol_order_type: The alcohol_order_type of this OrderLineActivity.
        :type: str
        """
        self._alcohol_order_type = alcohol_order_type

    @property
    def distribution_channel(self):
        """
        Gets the distribution_channel of this OrderLineActivity.


        :return: The distribution_channel of this OrderLineActivity.
        :rtype: str
        """
        return self._distribution_channel

    @distribution_channel.setter
    def distribution_channel(self, distribution_channel):
        """
        Sets the distribution_channel of this OrderLineActivity.


        :param distribution_channel: The distribution_channel of this OrderLineActivity.
        :type: str
        """
        self._distribution_channel = distribution_channel

    @property
    def distribution_channel_name(self):
        """
        Gets the distribution_channel_name of this OrderLineActivity.


        :return: The distribution_channel_name of this OrderLineActivity.
        :rtype: str
        """
        return self._distribution_channel_name

    @distribution_channel_name.setter
    def distribution_channel_name(self, distribution_channel_name):
        """
        Sets the distribution_channel_name of this OrderLineActivity.


        :param distribution_channel_name: The distribution_channel_name of this OrderLineActivity.
        :type: str
        """
        self._distribution_channel_name = distribution_channel_name

    @property
    def priority_code(self):
        """
        Gets the priority_code of this OrderLineActivity.


        :return: The priority_code of this OrderLineActivity.
        :rtype: int
        """
        return self._priority_code

    @priority_code.setter
    def priority_code(self, priority_code):
        """
        Sets the priority_code of this OrderLineActivity.


        :param priority_code: The priority_code of this OrderLineActivity.
        :type: int
        """
        self._priority_code = priority_code

    @property
    def order_date(self):
        """
        Gets the order_date of this OrderLineActivity.


        :return: The order_date of this OrderLineActivity.
        :rtype: datetime
        """
        return self._order_date

    @order_date.setter
    def order_date(self, order_date):
        """
        Sets the order_date of this OrderLineActivity.


        :param order_date: The order_date of this OrderLineActivity.
        :type: datetime
        """
        self._order_date = order_date

    @property
    def entered_by(self):
        """
        Gets the entered_by of this OrderLineActivity.


        :return: The entered_by of this OrderLineActivity.
        :rtype: str
        """
        return self._entered_by

    @entered_by.setter
    def entered_by(self, entered_by):
        """
        Sets the entered_by of this OrderLineActivity.


        :param entered_by: The entered_by of this OrderLineActivity.
        :type: str
        """
        self._entered_by = entered_by

    @property
    def order_reason(self):
        """
        Gets the order_reason of this OrderLineActivity.


        :return: The order_reason of this OrderLineActivity.
        :rtype: int
        """
        return self._order_reason

    @order_reason.setter
    def order_reason(self, order_reason):
        """
        Sets the order_reason of this OrderLineActivity.


        :param order_reason: The order_reason of this OrderLineActivity.
        :type: int
        """
        self._order_reason = order_reason

    @property
    def customer_order_no(self):
        """
        Gets the customer_order_no of this OrderLineActivity.


        :return: The customer_order_no of this OrderLineActivity.
        :rtype: str
        """
        return self._customer_order_no

    @customer_order_no.setter
    def customer_order_no(self, customer_order_no):
        """
        Sets the customer_order_no of this OrderLineActivity.


        :param customer_order_no: The customer_order_no of this OrderLineActivity.
        :type: str
        """
        self._customer_order_no = customer_order_no

    @property
    def price_level(self):
        """
        Gets the price_level of this OrderLineActivity.


        :return: The price_level of this OrderLineActivity.
        :rtype: str
        """
        return self._price_level

    @price_level.setter
    def price_level(self, price_level):
        """
        Sets the price_level of this OrderLineActivity.


        :param price_level: The price_level of this OrderLineActivity.
        :type: str
        """
        self._price_level = price_level

    @property
    def ship_by(self):
        """
        Gets the ship_by of this OrderLineActivity.


        :return: The ship_by of this OrderLineActivity.
        :rtype: datetime
        """
        return self._ship_by

    @ship_by.setter
    def ship_by(self, ship_by):
        """
        Sets the ship_by of this OrderLineActivity.


        :param ship_by: The ship_by of this OrderLineActivity.
        :type: datetime
        """
        self._ship_by = ship_by

    @property
    def stop_back_orders(self):
        """
        Gets the stop_back_orders of this OrderLineActivity.


        :return: The stop_back_orders of this OrderLineActivity.
        :rtype: str
        """
        return self._stop_back_orders

    @stop_back_orders.setter
    def stop_back_orders(self, stop_back_orders):
        """
        Sets the stop_back_orders of this OrderLineActivity.


        :param stop_back_orders: The stop_back_orders of this OrderLineActivity.
        :type: str
        """
        self._stop_back_orders = stop_back_orders

    @property
    def order_source_id(self):
        """
        Gets the order_source_id of this OrderLineActivity.


        :return: The order_source_id of this OrderLineActivity.
        :rtype: int
        """
        return self._order_source_id

    @order_source_id.setter
    def order_source_id(self, order_source_id):
        """
        Sets the order_source_id of this OrderLineActivity.


        :param order_source_id: The order_source_id of this OrderLineActivity.
        :type: int
        """
        self._order_source_id = order_source_id

    @property
    def order_source_name(self):
        """
        Gets the order_source_name of this OrderLineActivity.


        :return: The order_source_name of this OrderLineActivity.
        :rtype: str
        """
        return self._order_source_name

    @order_source_name.setter
    def order_source_name(self, order_source_name):
        """
        Sets the order_source_name of this OrderLineActivity.


        :param order_source_name: The order_source_name of this OrderLineActivity.
        :type: str
        """
        self._order_source_name = order_source_name

    @property
    def integration_partner_id(self):
        """
        Gets the integration_partner_id of this OrderLineActivity.


        :return: The integration_partner_id of this OrderLineActivity.
        :rtype: int
        """
        return self._integration_partner_id

    @integration_partner_id.setter
    def integration_partner_id(self, integration_partner_id):
        """
        Sets the integration_partner_id of this OrderLineActivity.


        :param integration_partner_id: The integration_partner_id of this OrderLineActivity.
        :type: int
        """
        self._integration_partner_id = integration_partner_id

    @property
    def integration_partner_name(self):
        """
        Gets the integration_partner_name of this OrderLineActivity.


        :return: The integration_partner_name of this OrderLineActivity.
        :rtype: str
        """
        return self._integration_partner_name

    @integration_partner_name.setter
    def integration_partner_name(self, integration_partner_name):
        """
        Sets the integration_partner_name of this OrderLineActivity.


        :param integration_partner_name: The integration_partner_name of this OrderLineActivity.
        :type: str
        """
        self._integration_partner_name = integration_partner_name

    @property
    def order_load_program_id(self):
        """
        Gets the order_load_program_id of this OrderLineActivity.


        :return: The order_load_program_id of this OrderLineActivity.
        :rtype: int
        """
        return self._order_load_program_id

    @order_load_program_id.setter
    def order_load_program_id(self, order_load_program_id):
        """
        Sets the order_load_program_id of this OrderLineActivity.


        :param order_load_program_id: The order_load_program_id of this OrderLineActivity.
        :type: int
        """
        self._order_load_program_id = order_load_program_id

    @property
    def order_load_program_name(self):
        """
        Gets the order_load_program_name of this OrderLineActivity.


        :return: The order_load_program_name of this OrderLineActivity.
        :rtype: str
        """
        return self._order_load_program_name

    @order_load_program_name.setter
    def order_load_program_name(self, order_load_program_name):
        """
        Sets the order_load_program_name of this OrderLineActivity.


        :param order_load_program_name: The order_load_program_name of this OrderLineActivity.
        :type: str
        """
        self._order_load_program_name = order_load_program_name

    @property
    def oms_order_no(self):
        """
        Gets the oms_order_no of this OrderLineActivity.


        :return: The oms_order_no of this OrderLineActivity.
        :rtype: int
        """
        return self._oms_order_no

    @oms_order_no.setter
    def oms_order_no(self, oms_order_no):
        """
        Sets the oms_order_no of this OrderLineActivity.


        :param oms_order_no: The oms_order_no of this OrderLineActivity.
        :type: int
        """
        self._oms_order_no = oms_order_no

    @property
    def oms_customer_id(self):
        """
        Gets the oms_customer_id of this OrderLineActivity.


        :return: The oms_customer_id of this OrderLineActivity.
        :rtype: int
        """
        return self._oms_customer_id

    @oms_customer_id.setter
    def oms_customer_id(self, oms_customer_id):
        """
        Sets the oms_customer_id of this OrderLineActivity.


        :param oms_customer_id: The oms_customer_id of this OrderLineActivity.
        :type: int
        """
        self._oms_customer_id = oms_customer_id

    @property
    def ship_to_attention(self):
        """
        Gets the ship_to_attention of this OrderLineActivity.


        :return: The ship_to_attention of this OrderLineActivity.
        :rtype: str
        """
        return self._ship_to_attention

    @ship_to_attention.setter
    def ship_to_attention(self, ship_to_attention):
        """
        Sets the ship_to_attention of this OrderLineActivity.


        :param ship_to_attention: The ship_to_attention of this OrderLineActivity.
        :type: str
        """
        self._ship_to_attention = ship_to_attention

    @property
    def ship_to_company(self):
        """
        Gets the ship_to_company of this OrderLineActivity.


        :return: The ship_to_company of this OrderLineActivity.
        :rtype: str
        """
        return self._ship_to_company

    @ship_to_company.setter
    def ship_to_company(self, ship_to_company):
        """
        Sets the ship_to_company of this OrderLineActivity.


        :param ship_to_company: The ship_to_company of this OrderLineActivity.
        :type: str
        """
        self._ship_to_company = ship_to_company

    @property
    def ship_to_street(self):
        """
        Gets the ship_to_street of this OrderLineActivity.


        :return: The ship_to_street of this OrderLineActivity.
        :rtype: str
        """
        return self._ship_to_street

    @ship_to_street.setter
    def ship_to_street(self, ship_to_street):
        """
        Sets the ship_to_street of this OrderLineActivity.


        :param ship_to_street: The ship_to_street of this OrderLineActivity.
        :type: str
        """
        self._ship_to_street = ship_to_street

    @property
    def ship_to_street2(self):
        """
        Gets the ship_to_street2 of this OrderLineActivity.


        :return: The ship_to_street2 of this OrderLineActivity.
        :rtype: str
        """
        return self._ship_to_street2

    @ship_to_street2.setter
    def ship_to_street2(self, ship_to_street2):
        """
        Sets the ship_to_street2 of this OrderLineActivity.


        :param ship_to_street2: The ship_to_street2 of this OrderLineActivity.
        :type: str
        """
        self._ship_to_street2 = ship_to_street2

    @property
    def ship_to_street3(self):
        """
        Gets the ship_to_street3 of this OrderLineActivity.


        :return: The ship_to_street3 of this OrderLineActivity.
        :rtype: str
        """
        return self._ship_to_street3

    @ship_to_street3.setter
    def ship_to_street3(self, ship_to_street3):
        """
        Sets the ship_to_street3 of this OrderLineActivity.


        :param ship_to_street3: The ship_to_street3 of this OrderLineActivity.
        :type: str
        """
        self._ship_to_street3 = ship_to_street3

    @property
    def ship_to_city(self):
        """
        Gets the ship_to_city of this OrderLineActivity.


        :return: The ship_to_city of this OrderLineActivity.
        :rtype: str
        """
        return self._ship_to_city

    @ship_to_city.setter
    def ship_to_city(self, ship_to_city):
        """
        Sets the ship_to_city of this OrderLineActivity.


        :param ship_to_city: The ship_to_city of this OrderLineActivity.
        :type: str
        """
        self._ship_to_city = ship_to_city

    @property
    def ship_to_state(self):
        """
        Gets the ship_to_state of this OrderLineActivity.


        :return: The ship_to_state of this OrderLineActivity.
        :rtype: str
        """
        return self._ship_to_state

    @ship_to_state.setter
    def ship_to_state(self, ship_to_state):
        """
        Sets the ship_to_state of this OrderLineActivity.


        :param ship_to_state: The ship_to_state of this OrderLineActivity.
        :type: str
        """
        self._ship_to_state = ship_to_state

    @property
    def ship_to_zip(self):
        """
        Gets the ship_to_zip of this OrderLineActivity.


        :return: The ship_to_zip of this OrderLineActivity.
        :rtype: str
        """
        return self._ship_to_zip

    @ship_to_zip.setter
    def ship_to_zip(self, ship_to_zip):
        """
        Sets the ship_to_zip of this OrderLineActivity.


        :param ship_to_zip: The ship_to_zip of this OrderLineActivity.
        :type: str
        """
        self._ship_to_zip = ship_to_zip

    @property
    def ship_to_country(self):
        """
        Gets the ship_to_country of this OrderLineActivity.


        :return: The ship_to_country of this OrderLineActivity.
        :rtype: str
        """
        return self._ship_to_country

    @ship_to_country.setter
    def ship_to_country(self, ship_to_country):
        """
        Sets the ship_to_country of this OrderLineActivity.


        :param ship_to_country: The ship_to_country of this OrderLineActivity.
        :type: str
        """
        self._ship_to_country = ship_to_country

    @property
    def ship_to_phone(self):
        """
        Gets the ship_to_phone of this OrderLineActivity.


        :return: The ship_to_phone of this OrderLineActivity.
        :rtype: str
        """
        return self._ship_to_phone

    @ship_to_phone.setter
    def ship_to_phone(self, ship_to_phone):
        """
        Sets the ship_to_phone of this OrderLineActivity.


        :param ship_to_phone: The ship_to_phone of this OrderLineActivity.
        :type: str
        """
        self._ship_to_phone = ship_to_phone

    @property
    def ship_to_email(self):
        """
        Gets the ship_to_email of this OrderLineActivity.


        :return: The ship_to_email of this OrderLineActivity.
        :rtype: str
        """
        return self._ship_to_email

    @ship_to_email.setter
    def ship_to_email(self, ship_to_email):
        """
        Sets the ship_to_email of this OrderLineActivity.


        :param ship_to_email: The ship_to_email of this OrderLineActivity.
        :type: str
        """
        self._ship_to_email = ship_to_email

    @property
    def bill_to_attention(self):
        """
        Gets the bill_to_attention of this OrderLineActivity.


        :return: The bill_to_attention of this OrderLineActivity.
        :rtype: str
        """
        return self._bill_to_attention

    @bill_to_attention.setter
    def bill_to_attention(self, bill_to_attention):
        """
        Sets the bill_to_attention of this OrderLineActivity.


        :param bill_to_attention: The bill_to_attention of this OrderLineActivity.
        :type: str
        """
        self._bill_to_attention = bill_to_attention

    @property
    def bill_to_company(self):
        """
        Gets the bill_to_company of this OrderLineActivity.


        :return: The bill_to_company of this OrderLineActivity.
        :rtype: str
        """
        return self._bill_to_company

    @bill_to_company.setter
    def bill_to_company(self, bill_to_company):
        """
        Sets the bill_to_company of this OrderLineActivity.


        :param bill_to_company: The bill_to_company of this OrderLineActivity.
        :type: str
        """
        self._bill_to_company = bill_to_company

    @property
    def bill_to_street(self):
        """
        Gets the bill_to_street of this OrderLineActivity.


        :return: The bill_to_street of this OrderLineActivity.
        :rtype: str
        """
        return self._bill_to_street

    @bill_to_street.setter
    def bill_to_street(self, bill_to_street):
        """
        Sets the bill_to_street of this OrderLineActivity.


        :param bill_to_street: The bill_to_street of this OrderLineActivity.
        :type: str
        """
        self._bill_to_street = bill_to_street

    @property
    def bill_to_street2(self):
        """
        Gets the bill_to_street2 of this OrderLineActivity.


        :return: The bill_to_street2 of this OrderLineActivity.
        :rtype: str
        """
        return self._bill_to_street2

    @bill_to_street2.setter
    def bill_to_street2(self, bill_to_street2):
        """
        Sets the bill_to_street2 of this OrderLineActivity.


        :param bill_to_street2: The bill_to_street2 of this OrderLineActivity.
        :type: str
        """
        self._bill_to_street2 = bill_to_street2

    @property
    def bill_to_street3(self):
        """
        Gets the bill_to_street3 of this OrderLineActivity.


        :return: The bill_to_street3 of this OrderLineActivity.
        :rtype: str
        """
        return self._bill_to_street3

    @bill_to_street3.setter
    def bill_to_street3(self, bill_to_street3):
        """
        Sets the bill_to_street3 of this OrderLineActivity.


        :param bill_to_street3: The bill_to_street3 of this OrderLineActivity.
        :type: str
        """
        self._bill_to_street3 = bill_to_street3

    @property
    def bill_to_city(self):
        """
        Gets the bill_to_city of this OrderLineActivity.


        :return: The bill_to_city of this OrderLineActivity.
        :rtype: str
        """
        return self._bill_to_city

    @bill_to_city.setter
    def bill_to_city(self, bill_to_city):
        """
        Sets the bill_to_city of this OrderLineActivity.


        :param bill_to_city: The bill_to_city of this OrderLineActivity.
        :type: str
        """
        self._bill_to_city = bill_to_city

    @property
    def bill_to_state(self):
        """
        Gets the bill_to_state of this OrderLineActivity.


        :return: The bill_to_state of this OrderLineActivity.
        :rtype: str
        """
        return self._bill_to_state

    @bill_to_state.setter
    def bill_to_state(self, bill_to_state):
        """
        Sets the bill_to_state of this OrderLineActivity.


        :param bill_to_state: The bill_to_state of this OrderLineActivity.
        :type: str
        """
        self._bill_to_state = bill_to_state

    @property
    def bill_to_zip(self):
        """
        Gets the bill_to_zip of this OrderLineActivity.


        :return: The bill_to_zip of this OrderLineActivity.
        :rtype: str
        """
        return self._bill_to_zip

    @bill_to_zip.setter
    def bill_to_zip(self, bill_to_zip):
        """
        Sets the bill_to_zip of this OrderLineActivity.


        :param bill_to_zip: The bill_to_zip of this OrderLineActivity.
        :type: str
        """
        self._bill_to_zip = bill_to_zip

    @property
    def bill_to_country(self):
        """
        Gets the bill_to_country of this OrderLineActivity.


        :return: The bill_to_country of this OrderLineActivity.
        :rtype: str
        """
        return self._bill_to_country

    @bill_to_country.setter
    def bill_to_country(self, bill_to_country):
        """
        Sets the bill_to_country of this OrderLineActivity.


        :param bill_to_country: The bill_to_country of this OrderLineActivity.
        :type: str
        """
        self._bill_to_country = bill_to_country

    @property
    def bill_to_phone(self):
        """
        Gets the bill_to_phone of this OrderLineActivity.


        :return: The bill_to_phone of this OrderLineActivity.
        :rtype: str
        """
        return self._bill_to_phone

    @bill_to_phone.setter
    def bill_to_phone(self, bill_to_phone):
        """
        Sets the bill_to_phone of this OrderLineActivity.


        :param bill_to_phone: The bill_to_phone of this OrderLineActivity.
        :type: str
        """
        self._bill_to_phone = bill_to_phone

    @property
    def bill_to_email(self):
        """
        Gets the bill_to_email of this OrderLineActivity.


        :return: The bill_to_email of this OrderLineActivity.
        :rtype: str
        """
        return self._bill_to_email

    @bill_to_email.setter
    def bill_to_email(self, bill_to_email):
        """
        Sets the bill_to_email of this OrderLineActivity.


        :param bill_to_email: The bill_to_email of this OrderLineActivity.
        :type: str
        """
        self._bill_to_email = bill_to_email

    @property
    def order_ship_date(self):
        """
        Gets the order_ship_date of this OrderLineActivity.


        :return: The order_ship_date of this OrderLineActivity.
        :rtype: datetime
        """
        return self._order_ship_date

    @order_ship_date.setter
    def order_ship_date(self, order_ship_date):
        """
        Sets the order_ship_date of this OrderLineActivity.


        :param order_ship_date: The order_ship_date of this OrderLineActivity.
        :type: datetime
        """
        self._order_ship_date = order_ship_date

    @property
    def freight(self):
        """
        Gets the freight of this OrderLineActivity.


        :return: The freight of this OrderLineActivity.
        :rtype: float
        """
        return self._freight

    @freight.setter
    def freight(self, freight):
        """
        Sets the freight of this OrderLineActivity.


        :param freight: The freight of this OrderLineActivity.
        :type: float
        """
        self._freight = freight

    @property
    def order_weight_lbs(self):
        """
        Gets the order_weight_lbs of this OrderLineActivity.


        :return: The order_weight_lbs of this OrderLineActivity.
        :rtype: float
        """
        return self._order_weight_lbs

    @order_weight_lbs.setter
    def order_weight_lbs(self, order_weight_lbs):
        """
        Sets the order_weight_lbs of this OrderLineActivity.


        :param order_weight_lbs: The order_weight_lbs of this OrderLineActivity.
        :type: float
        """
        self._order_weight_lbs = order_weight_lbs

    @property
    def order_estimated_weight_lbs(self):
        """
        Gets the order_estimated_weight_lbs of this OrderLineActivity.


        :return: The order_estimated_weight_lbs of this OrderLineActivity.
        :rtype: float
        """
        return self._order_estimated_weight_lbs

    @order_estimated_weight_lbs.setter
    def order_estimated_weight_lbs(self, order_estimated_weight_lbs):
        """
        Sets the order_estimated_weight_lbs of this OrderLineActivity.


        :param order_estimated_weight_lbs: The order_estimated_weight_lbs of this OrderLineActivity.
        :type: float
        """
        self._order_estimated_weight_lbs = order_estimated_weight_lbs

    @property
    def number_of_pallets(self):
        """
        Gets the number_of_pallets of this OrderLineActivity.


        :return: The number_of_pallets of this OrderLineActivity.
        :rtype: int
        """
        return self._number_of_pallets

    @number_of_pallets.setter
    def number_of_pallets(self, number_of_pallets):
        """
        Sets the number_of_pallets of this OrderLineActivity.


        :param number_of_pallets: The number_of_pallets of this OrderLineActivity.
        :type: int
        """
        self._number_of_pallets = number_of_pallets

    @property
    def number_of_line_items(self):
        """
        Gets the number_of_line_items of this OrderLineActivity.


        :return: The number_of_line_items of this OrderLineActivity.
        :rtype: int
        """
        return self._number_of_line_items

    @number_of_line_items.setter
    def number_of_line_items(self, number_of_line_items):
        """
        Sets the number_of_line_items of this OrderLineActivity.


        :param number_of_line_items: The number_of_line_items of this OrderLineActivity.
        :type: int
        """
        self._number_of_line_items = number_of_line_items

    @property
    def completion_status(self):
        """
        Gets the completion_status of this OrderLineActivity.


        :return: The completion_status of this OrderLineActivity.
        :rtype: str
        """
        return self._completion_status

    @completion_status.setter
    def completion_status(self, completion_status):
        """
        Sets the completion_status of this OrderLineActivity.


        :param completion_status: The completion_status of this OrderLineActivity.
        :type: str
        """
        self._completion_status = completion_status

    @property
    def hold_code(self):
        """
        Gets the hold_code of this OrderLineActivity.


        :return: The hold_code of this OrderLineActivity.
        :rtype: str
        """
        return self._hold_code

    @hold_code.setter
    def hold_code(self, hold_code):
        """
        Sets the hold_code of this OrderLineActivity.


        :param hold_code: The hold_code of this OrderLineActivity.
        :type: str
        """
        self._hold_code = hold_code

    @property
    def ship_code(self):
        """
        Gets the ship_code of this OrderLineActivity.


        :return: The ship_code of this OrderLineActivity.
        :rtype: str
        """
        return self._ship_code

    @ship_code.setter
    def ship_code(self, ship_code):
        """
        Sets the ship_code of this OrderLineActivity.


        :param ship_code: The ship_code of this OrderLineActivity.
        :type: str
        """
        self._ship_code = ship_code

    @property
    def order_message(self):
        """
        Gets the order_message of this OrderLineActivity.


        :return: The order_message of this OrderLineActivity.
        :rtype: str
        """
        return self._order_message

    @order_message.setter
    def order_message(self, order_message):
        """
        Sets the order_message of this OrderLineActivity.


        :param order_message: The order_message of this OrderLineActivity.
        :type: str
        """
        self._order_message = order_message

    @property
    def division(self):
        """
        Gets the division of this OrderLineActivity.


        :return: The division of this OrderLineActivity.
        :rtype: int
        """
        return self._division

    @division.setter
    def division(self, division):
        """
        Sets the division of this OrderLineActivity.


        :param division: The division of this OrderLineActivity.
        :type: int
        """
        self._division = division

    @property
    def cost_center(self):
        """
        Gets the cost_center of this OrderLineActivity.


        :return: The cost_center of this OrderLineActivity.
        :rtype: str
        """
        return self._cost_center

    @cost_center.setter
    def cost_center(self, cost_center):
        """
        Sets the cost_center of this OrderLineActivity.


        :param cost_center: The cost_center of this OrderLineActivity.
        :type: str
        """
        self._cost_center = cost_center

    @property
    def authorized_by(self):
        """
        Gets the authorized_by of this OrderLineActivity.


        :return: The authorized_by of this OrderLineActivity.
        :rtype: str
        """
        return self._authorized_by

    @authorized_by.setter
    def authorized_by(self, authorized_by):
        """
        Sets the authorized_by of this OrderLineActivity.


        :param authorized_by: The authorized_by of this OrderLineActivity.
        :type: str
        """
        self._authorized_by = authorized_by

    @property
    def batch_no(self):
        """
        Gets the batch_no of this OrderLineActivity.


        :return: The batch_no of this OrderLineActivity.
        :rtype: str
        """
        return self._batch_no

    @batch_no.setter
    def batch_no(self, batch_no):
        """
        Sets the batch_no of this OrderLineActivity.


        :param batch_no: The batch_no of this OrderLineActivity.
        :type: str
        """
        self._batch_no = batch_no

    @property
    def first_ship_date(self):
        """
        Gets the first_ship_date of this OrderLineActivity.


        :return: The first_ship_date of this OrderLineActivity.
        :rtype: datetime
        """
        return self._first_ship_date

    @first_ship_date.setter
    def first_ship_date(self, first_ship_date):
        """
        Sets the first_ship_date of this OrderLineActivity.


        :param first_ship_date: The first_ship_date of this OrderLineActivity.
        :type: datetime
        """
        self._first_ship_date = first_ship_date

    @property
    def last_ship_date(self):
        """
        Gets the last_ship_date of this OrderLineActivity.


        :return: The last_ship_date of this OrderLineActivity.
        :rtype: datetime
        """
        return self._last_ship_date

    @last_ship_date.setter
    def last_ship_date(self, last_ship_date):
        """
        Sets the last_ship_date of this OrderLineActivity.


        :param last_ship_date: The last_ship_date of this OrderLineActivity.
        :type: datetime
        """
        self._last_ship_date = last_ship_date

    @property
    def deliver_on_date(self):
        """
        Gets the deliver_on_date of this OrderLineActivity.


        :return: The deliver_on_date of this OrderLineActivity.
        :rtype: datetime
        """
        return self._deliver_on_date

    @deliver_on_date.setter
    def deliver_on_date(self, deliver_on_date):
        """
        Sets the deliver_on_date of this OrderLineActivity.


        :param deliver_on_date: The deliver_on_date of this OrderLineActivity.
        :type: datetime
        """
        self._deliver_on_date = deliver_on_date

    @property
    def customer_po_no(self):
        """
        Gets the customer_po_no of this OrderLineActivity.


        :return: The customer_po_no of this OrderLineActivity.
        :rtype: str
        """
        return self._customer_po_no

    @customer_po_no.setter
    def customer_po_no(self, customer_po_no):
        """
        Sets the customer_po_no of this OrderLineActivity.


        :param customer_po_no: The customer_po_no of this OrderLineActivity.
        :type: str
        """
        self._customer_po_no = customer_po_no

    @property
    def ship_via(self):
        """
        Gets the ship_via of this OrderLineActivity.


        :return: The ship_via of this OrderLineActivity.
        :rtype: str
        """
        return self._ship_via

    @ship_via.setter
    def ship_via(self, ship_via):
        """
        Sets the ship_via of this OrderLineActivity.


        :param ship_via: The ship_via of this OrderLineActivity.
        :type: str
        """
        self._ship_via = ship_via

    @property
    def need_by_date(self):
        """
        Gets the need_by_date of this OrderLineActivity.


        :return: The need_by_date of this OrderLineActivity.
        :rtype: datetime
        """
        return self._need_by_date

    @need_by_date.setter
    def need_by_date(self, need_by_date):
        """
        Sets the need_by_date of this OrderLineActivity.


        :param need_by_date: The need_by_date of this OrderLineActivity.
        :type: datetime
        """
        self._need_by_date = need_by_date

    @property
    def total(self):
        """
        Gets the total of this OrderLineActivity.


        :return: The total of this OrderLineActivity.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """
        Sets the total of this OrderLineActivity.


        :param total: The total of this OrderLineActivity.
        :type: float
        """
        self._total = total

    @property
    def balance_due(self):
        """
        Gets the balance_due of this OrderLineActivity.


        :return: The balance_due of this OrderLineActivity.
        :rtype: float
        """
        return self._balance_due

    @balance_due.setter
    def balance_due(self, balance_due):
        """
        Sets the balance_due of this OrderLineActivity.


        :param balance_due: The balance_due of this OrderLineActivity.
        :type: float
        """
        self._balance_due = balance_due

    @property
    def total_paid(self):
        """
        Gets the total_paid of this OrderLineActivity.


        :return: The total_paid of this OrderLineActivity.
        :rtype: float
        """
        return self._total_paid

    @total_paid.setter
    def total_paid(self, total_paid):
        """
        Sets the total_paid of this OrderLineActivity.


        :param total_paid: The total_paid of this OrderLineActivity.
        :type: float
        """
        self._total_paid = total_paid

    @property
    def authorization_amount(self):
        """
        Gets the authorization_amount of this OrderLineActivity.


        :return: The authorization_amount of this OrderLineActivity.
        :rtype: float
        """
        return self._authorization_amount

    @authorization_amount.setter
    def authorization_amount(self, authorization_amount):
        """
        Sets the authorization_amount of this OrderLineActivity.


        :param authorization_amount: The authorization_amount of this OrderLineActivity.
        :type: float
        """
        self._authorization_amount = authorization_amount

    @property
    def subtotal(self):
        """
        Gets the subtotal of this OrderLineActivity.


        :return: The subtotal of this OrderLineActivity.
        :rtype: float
        """
        return self._subtotal

    @subtotal.setter
    def subtotal(self, subtotal):
        """
        Sets the subtotal of this OrderLineActivity.


        :param subtotal: The subtotal of this OrderLineActivity.
        :type: float
        """
        self._subtotal = subtotal

    @property
    def tax_on_freight(self):
        """
        Gets the tax_on_freight of this OrderLineActivity.


        :return: The tax_on_freight of this OrderLineActivity.
        :rtype: float
        """
        return self._tax_on_freight

    @tax_on_freight.setter
    def tax_on_freight(self, tax_on_freight):
        """
        Sets the tax_on_freight of this OrderLineActivity.


        :param tax_on_freight: The tax_on_freight of this OrderLineActivity.
        :type: float
        """
        self._tax_on_freight = tax_on_freight

    @property
    def tax(self):
        """
        Gets the tax of this OrderLineActivity.


        :return: The tax of this OrderLineActivity.
        :rtype: float
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """
        Sets the tax of this OrderLineActivity.


        :param tax: The tax of this OrderLineActivity.
        :type: float
        """
        self._tax = tax

    @property
    def distribution_charges(self):
        """
        Gets the distribution_charges of this OrderLineActivity.


        :return: The distribution_charges of this OrderLineActivity.
        :rtype: float
        """
        return self._distribution_charges

    @distribution_charges.setter
    def distribution_charges(self, distribution_charges):
        """
        Sets the distribution_charges of this OrderLineActivity.


        :param distribution_charges: The distribution_charges of this OrderLineActivity.
        :type: float
        """
        self._distribution_charges = distribution_charges

    @property
    def shipping_charge(self):
        """
        Gets the shipping_charge of this OrderLineActivity.


        :return: The shipping_charge of this OrderLineActivity.
        :rtype: float
        """
        return self._shipping_charge

    @shipping_charge.setter
    def shipping_charge(self, shipping_charge):
        """
        Sets the shipping_charge of this OrderLineActivity.


        :param shipping_charge: The shipping_charge of this OrderLineActivity.
        :type: float
        """
        self._shipping_charge = shipping_charge

    @property
    def total_discount(self):
        """
        Gets the total_discount of this OrderLineActivity.


        :return: The total_discount of this OrderLineActivity.
        :rtype: float
        """
        return self._total_discount

    @total_discount.setter
    def total_discount(self, total_discount):
        """
        Sets the total_discount of this OrderLineActivity.


        :param total_discount: The total_discount of this OrderLineActivity.
        :type: float
        """
        self._total_discount = total_discount

    @property
    def parcel_account_id(self):
        """
        Gets the parcel_account_id of this OrderLineActivity.


        :return: The parcel_account_id of this OrderLineActivity.
        :rtype: int
        """
        return self._parcel_account_id

    @parcel_account_id.setter
    def parcel_account_id(self, parcel_account_id):
        """
        Sets the parcel_account_id of this OrderLineActivity.


        :param parcel_account_id: The parcel_account_id of this OrderLineActivity.
        :type: int
        """
        self._parcel_account_id = parcel_account_id

    @property
    def packing_slip_template_id(self):
        """
        Gets the packing_slip_template_id of this OrderLineActivity.


        :return: The packing_slip_template_id of this OrderLineActivity.
        :rtype: int
        """
        return self._packing_slip_template_id

    @packing_slip_template_id.setter
    def packing_slip_template_id(self, packing_slip_template_id):
        """
        Sets the packing_slip_template_id of this OrderLineActivity.


        :param packing_slip_template_id: The packing_slip_template_id of this OrderLineActivity.
        :type: int
        """
        self._packing_slip_template_id = packing_slip_template_id

    @property
    def gift_message(self):
        """
        Gets the gift_message of this OrderLineActivity.


        :return: The gift_message of this OrderLineActivity.
        :rtype: str
        """
        return self._gift_message

    @gift_message.setter
    def gift_message(self, gift_message):
        """
        Sets the gift_message of this OrderLineActivity.


        :param gift_message: The gift_message of this OrderLineActivity.
        :type: str
        """
        self._gift_message = gift_message

    @property
    def branch_sector(self):
        """
        Gets the branch_sector of this OrderLineActivity.


        :return: The branch_sector of this OrderLineActivity.
        :rtype: str
        """
        return self._branch_sector

    @branch_sector.setter
    def branch_sector(self, branch_sector):
        """
        Sets the branch_sector of this OrderLineActivity.


        :param branch_sector: The branch_sector of this OrderLineActivity.
        :type: str
        """
        self._branch_sector = branch_sector

    @property
    def branch_area(self):
        """
        Gets the branch_area of this OrderLineActivity.


        :return: The branch_area of this OrderLineActivity.
        :rtype: str
        """
        return self._branch_area

    @branch_area.setter
    def branch_area(self, branch_area):
        """
        Sets the branch_area of this OrderLineActivity.


        :param branch_area: The branch_area of this OrderLineActivity.
        :type: str
        """
        self._branch_area = branch_area

    @property
    def branch_customer_type(self):
        """
        Gets the branch_customer_type of this OrderLineActivity.


        :return: The branch_customer_type of this OrderLineActivity.
        :rtype: str
        """
        return self._branch_customer_type

    @branch_customer_type.setter
    def branch_customer_type(self, branch_customer_type):
        """
        Sets the branch_customer_type of this OrderLineActivity.


        :param branch_customer_type: The branch_customer_type of this OrderLineActivity.
        :type: str
        """
        self._branch_customer_type = branch_customer_type

    @property
    def branch_id(self):
        """
        Gets the branch_id of this OrderLineActivity.


        :return: The branch_id of this OrderLineActivity.
        :rtype: str
        """
        return self._branch_id

    @branch_id.setter
    def branch_id(self, branch_id):
        """
        Sets the branch_id of this OrderLineActivity.


        :param branch_id: The branch_id of this OrderLineActivity.
        :type: str
        """
        self._branch_id = branch_id

    @property
    def order_code(self):
        """
        Gets the order_code of this OrderLineActivity.


        :return: The order_code of this OrderLineActivity.
        :rtype: str
        """
        return self._order_code

    @order_code.setter
    def order_code(self, order_code):
        """
        Sets the order_code of this OrderLineActivity.


        :param order_code: The order_code of this OrderLineActivity.
        :type: str
        """
        self._order_code = order_code

    @property
    def lead_package_id(self):
        """
        Gets the lead_package_id of this OrderLineActivity.


        :return: The lead_package_id of this OrderLineActivity.
        :rtype: str
        """
        return self._lead_package_id

    @lead_package_id.setter
    def lead_package_id(self, lead_package_id):
        """
        Sets the lead_package_id of this OrderLineActivity.


        :param lead_package_id: The lead_package_id of this OrderLineActivity.
        :type: str
        """
        self._lead_package_id = lead_package_id

    @property
    def total_qty(self):
        """
        Gets the total_qty of this OrderLineActivity.


        :return: The total_qty of this OrderLineActivity.
        :rtype: int
        """
        return self._total_qty

    @total_qty.setter
    def total_qty(self, total_qty):
        """
        Sets the total_qty of this OrderLineActivity.


        :param total_qty: The total_qty of this OrderLineActivity.
        :type: int
        """
        self._total_qty = total_qty

    @property
    def estimated_number_of_picks(self):
        """
        Gets the estimated_number_of_picks of this OrderLineActivity.


        :return: The estimated_number_of_picks of this OrderLineActivity.
        :rtype: int
        """
        return self._estimated_number_of_picks

    @estimated_number_of_picks.setter
    def estimated_number_of_picks(self, estimated_number_of_picks):
        """
        Sets the estimated_number_of_picks of this OrderLineActivity.


        :param estimated_number_of_picks: The estimated_number_of_picks of this OrderLineActivity.
        :type: int
        """
        self._estimated_number_of_picks = estimated_number_of_picks

    @property
    def order_confirmation_email_template_id(self):
        """
        Gets the order_confirmation_email_template_id of this OrderLineActivity.


        :return: The order_confirmation_email_template_id of this OrderLineActivity.
        :rtype: int
        """
        return self._order_confirmation_email_template_id

    @order_confirmation_email_template_id.setter
    def order_confirmation_email_template_id(self, order_confirmation_email_template_id):
        """
        Sets the order_confirmation_email_template_id of this OrderLineActivity.


        :param order_confirmation_email_template_id: The order_confirmation_email_template_id of this OrderLineActivity.
        :type: int
        """
        self._order_confirmation_email_template_id = order_confirmation_email_template_id

    @property
    def shipment_confirmation_email_template_id(self):
        """
        Gets the shipment_confirmation_email_template_id of this OrderLineActivity.


        :return: The shipment_confirmation_email_template_id of this OrderLineActivity.
        :rtype: int
        """
        return self._shipment_confirmation_email_template_id

    @shipment_confirmation_email_template_id.setter
    def shipment_confirmation_email_template_id(self, shipment_confirmation_email_template_id):
        """
        Sets the shipment_confirmation_email_template_id of this OrderLineActivity.


        :param shipment_confirmation_email_template_id: The shipment_confirmation_email_template_id of this OrderLineActivity.
        :type: int
        """
        self._shipment_confirmation_email_template_id = shipment_confirmation_email_template_id

    @property
    def order_invoice_template_id(self):
        """
        Gets the order_invoice_template_id of this OrderLineActivity.


        :return: The order_invoice_template_id of this OrderLineActivity.
        :rtype: int
        """
        return self._order_invoice_template_id

    @order_invoice_template_id.setter
    def order_invoice_template_id(self, order_invoice_template_id):
        """
        Sets the order_invoice_template_id of this OrderLineActivity.


        :param order_invoice_template_id: The order_invoice_template_id of this OrderLineActivity.
        :type: int
        """
        self._order_invoice_template_id = order_invoice_template_id

    @property
    def price_mode(self):
        """
        Gets the price_mode of this OrderLineActivity.


        :return: The price_mode of this OrderLineActivity.
        :rtype: str
        """
        return self._price_mode

    @price_mode.setter
    def price_mode(self, price_mode):
        """
        Sets the price_mode of this OrderLineActivity.


        :param price_mode: The price_mode of this OrderLineActivity.
        :type: str
        """
        self._price_mode = price_mode

    @property
    def custom_fields(self):
        """
        Gets the custom_fields of this OrderLineActivity.


        :return: The custom_fields of this OrderLineActivity.
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """
        Sets the custom_fields of this OrderLineActivity.


        :param custom_fields: The custom_fields of this OrderLineActivity.
        :type: dict(str, object)
        """
        self._custom_fields = custom_fields

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

