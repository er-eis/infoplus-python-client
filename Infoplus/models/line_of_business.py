# coding: utf-8

"""
    Infoplus API

    Infoplus API.  # noqa: E501

    OpenAPI spec version: beta
    Contact: api@infopluscommerce.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class LineOfBusiness(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'name': 'str',
        'code': 'str',
        'label': 'str',
        'default_warehouse_service_type_id': 'int',
        'default_sla_service_days': 'int',
        'default_sla_cutoff_time': 'str',
        'create_date': 'datetime',
        'modify_date': 'datetime',
        'custom_fields': 'dict(str, object)'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'code': 'code',
        'label': 'label',
        'default_warehouse_service_type_id': 'defaultWarehouseServiceTypeId',
        'default_sla_service_days': 'defaultSLAServiceDays',
        'default_sla_cutoff_time': 'defaultSLACutoffTime',
        'create_date': 'createDate',
        'modify_date': 'modifyDate',
        'custom_fields': 'customFields'
    }

    def __init__(self, id=None, name=None, code=None, label=None, default_warehouse_service_type_id=None, default_sla_service_days=None, default_sla_cutoff_time=None, create_date=None, modify_date=None, custom_fields=None):  # noqa: E501
        """LineOfBusiness - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._name = None
        self._code = None
        self._label = None
        self._default_warehouse_service_type_id = None
        self._default_sla_service_days = None
        self._default_sla_cutoff_time = None
        self._create_date = None
        self._modify_date = None
        self._custom_fields = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if code is not None:
            self.code = code
        if label is not None:
            self.label = label
        if default_warehouse_service_type_id is not None:
            self.default_warehouse_service_type_id = default_warehouse_service_type_id
        if default_sla_service_days is not None:
            self.default_sla_service_days = default_sla_service_days
        if default_sla_cutoff_time is not None:
            self.default_sla_cutoff_time = default_sla_cutoff_time
        if create_date is not None:
            self.create_date = create_date
        if modify_date is not None:
            self.modify_date = modify_date
        if custom_fields is not None:
            self.custom_fields = custom_fields

    @property
    def id(self):
        """Gets the id of this LineOfBusiness.  # noqa: E501


        :return: The id of this LineOfBusiness.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LineOfBusiness.


        :param id: The id of this LineOfBusiness.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this LineOfBusiness.  # noqa: E501


        :return: The name of this LineOfBusiness.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LineOfBusiness.


        :param name: The name of this LineOfBusiness.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def code(self):
        """Gets the code of this LineOfBusiness.  # noqa: E501


        :return: The code of this LineOfBusiness.  # noqa: E501
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this LineOfBusiness.


        :param code: The code of this LineOfBusiness.  # noqa: E501
        :type: str
        """

        self._code = code

    @property
    def label(self):
        """Gets the label of this LineOfBusiness.  # noqa: E501


        :return: The label of this LineOfBusiness.  # noqa: E501
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this LineOfBusiness.


        :param label: The label of this LineOfBusiness.  # noqa: E501
        :type: str
        """

        self._label = label

    @property
    def default_warehouse_service_type_id(self):
        """Gets the default_warehouse_service_type_id of this LineOfBusiness.  # noqa: E501


        :return: The default_warehouse_service_type_id of this LineOfBusiness.  # noqa: E501
        :rtype: int
        """
        return self._default_warehouse_service_type_id

    @default_warehouse_service_type_id.setter
    def default_warehouse_service_type_id(self, default_warehouse_service_type_id):
        """Sets the default_warehouse_service_type_id of this LineOfBusiness.


        :param default_warehouse_service_type_id: The default_warehouse_service_type_id of this LineOfBusiness.  # noqa: E501
        :type: int
        """

        self._default_warehouse_service_type_id = default_warehouse_service_type_id

    @property
    def default_sla_service_days(self):
        """Gets the default_sla_service_days of this LineOfBusiness.  # noqa: E501


        :return: The default_sla_service_days of this LineOfBusiness.  # noqa: E501
        :rtype: int
        """
        return self._default_sla_service_days

    @default_sla_service_days.setter
    def default_sla_service_days(self, default_sla_service_days):
        """Sets the default_sla_service_days of this LineOfBusiness.


        :param default_sla_service_days: The default_sla_service_days of this LineOfBusiness.  # noqa: E501
        :type: int
        """

        self._default_sla_service_days = default_sla_service_days

    @property
    def default_sla_cutoff_time(self):
        """Gets the default_sla_cutoff_time of this LineOfBusiness.  # noqa: E501


        :return: The default_sla_cutoff_time of this LineOfBusiness.  # noqa: E501
        :rtype: str
        """
        return self._default_sla_cutoff_time

    @default_sla_cutoff_time.setter
    def default_sla_cutoff_time(self, default_sla_cutoff_time):
        """Sets the default_sla_cutoff_time of this LineOfBusiness.


        :param default_sla_cutoff_time: The default_sla_cutoff_time of this LineOfBusiness.  # noqa: E501
        :type: str
        """

        self._default_sla_cutoff_time = default_sla_cutoff_time

    @property
    def create_date(self):
        """Gets the create_date of this LineOfBusiness.  # noqa: E501


        :return: The create_date of this LineOfBusiness.  # noqa: E501
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this LineOfBusiness.


        :param create_date: The create_date of this LineOfBusiness.  # noqa: E501
        :type: datetime
        """

        self._create_date = create_date

    @property
    def modify_date(self):
        """Gets the modify_date of this LineOfBusiness.  # noqa: E501


        :return: The modify_date of this LineOfBusiness.  # noqa: E501
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """Sets the modify_date of this LineOfBusiness.


        :param modify_date: The modify_date of this LineOfBusiness.  # noqa: E501
        :type: datetime
        """

        self._modify_date = modify_date

    @property
    def custom_fields(self):
        """Gets the custom_fields of this LineOfBusiness.  # noqa: E501


        :return: The custom_fields of this LineOfBusiness.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this LineOfBusiness.


        :param custom_fields: The custom_fields of this LineOfBusiness.  # noqa: E501
        :type: dict(str, object)
        """

        self._custom_fields = custom_fields

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LineOfBusiness):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
